{
	"info": {
		"_postman_id": "9c377c09-1f00-4681-bde3-b3b5102b9643",
		"name": "Bonifici",
		"description": "Bonifici",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Fund_transfer_request",
			"item": [
				{
					"name": "TC1_interno_fundtransfer_EUR(SHA)_Execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//To store paymentid\r",
									"pm.environment.set(\"paymentid\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"]['tns:PaymentId']);\r",
									"//To store CRO\r",
									"pm.environment.set(\"TC1_CRO\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"]['tns:Cro']);\r",
									"\r",
									"//To store payment date\r",
									"pm.environment.set(\"PaymentDate\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:DateFields\"][\"tns:PaymentDate\"]);\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonifici PaymentId is ----> \" +PaymentId]=PaymentId;\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESAURITO\"; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>0000000</fun:SubjectCallerId>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>{{Debitaccount1}}</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>O1641490340</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SELBIT2BXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>AB de Villiers</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>TEST NEW SOA</fun:Reference>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:IBCode>00418633</fun:IBCode>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC2_interno_Fundtransfer_EUR(SHA)_Verification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var STATO =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:STATO'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"tests[\"Bonifici fund transfer CRO is ----->\"+Cro]=Cro\r",
									"\r",
									"//tests[\"Bonificio Execution Status1  ----->  \"+STATO] =  STATO  === \"DA_CONTABILIZZARE_FTF\"; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>0000000</fun:SubjectCallerId>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>{{Debitaccount1}}</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>O1641490340</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SELBIT2BXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>AB de Villiers</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>TEST NEW SOA</fun:Reference>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:IBCode>00418633</fun:IBCode>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC3_interno_fundtransfer_verification_EUR(BEN)_Verification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Tipo spese non valido\"; \r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>0000000</fun:SubjectCallerId>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>{{Debitaccount1}}</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>O1641490340</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SELBIT2BXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>AB de Villiers</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>BEN</fun:KindOfCommission>\r\n            <fun:Reference>TEST NEW SOA</fun:Reference>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:IBCode>00418633</fun:IBCode>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC4_interno_fundtransfer(KindOfCommission : OUR)_testcase3(verification)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Tipo spese non valido\"; \r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>0000000</fun:SubjectCallerId>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>{{Debitaccount1}}</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>O1641490340</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SELBIT2BXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>AB de Villiers</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>OUR</fun:KindOfCommission>\r\n            <fun:Reference>TEST NEW SOA</fun:Reference>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:IBCode>00418633</fun:IBCode>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC5_interno fundtransfer- INVIO  (EUR)/KindOfCommission : SHA- > Motivation : ESAURITO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//To store CRO\r",
									"pm.environment.set(\"CRO3\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"]['tns:Cro']);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									"//pending commission value\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>0000000</fun:SubjectCallerId>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>{{Debitaccount1}}</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>FR7630003014300005826391557</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SOGEFRPPXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>AB de Villiers</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>TEST NEW SOA</fun:Reference>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:IBCode>00418633</fun:IBCode>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC6_Prenato",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"PRENOTATO\"; \r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>7017159</fun:SubjectCallerId>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>7017159</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>{{Debitaccount1}}</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>01641490340</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SELBIT2BXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>11</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC7_PRENOTATO_T2S",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"PRENOTATO_T2S\"; \r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>7017159</fun:SubjectCallerId>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>7017159</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>{{Debitaccount1}}</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>FR7630003014300005826391557</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SOGEFRPPXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>11</fun:Amount>\r\n               <fun:Currency>GBP</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC8_PLICK_Causale",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESAURITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n     <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>PLK</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>326189</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>326189</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>00393246720</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>               \r\n                  <fun:AccountOrIbanBeneficiary>IT59P0326822311001641490340</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>PL_PAYEE_NAME</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>PL_REFERENCE</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC9_Plick_Estero_name description verify",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"// Esteroname_verification--Comm. di bonifico STESSA BANCA - Plick\r",
									"\r",
									"var Esteroname_verification = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"][\"tns:ConditionDescription\"]\r",
									"console.log(\"Esteroname_verification\", Esteroname_verification);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Plick Esteroname_verification---->\"+Esteroname_verification]=Esteroname_verification ===\"Comm. di bonifico STESSA BANCA - Plick\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESAURITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n\r\n<soapenv:Envelope xmlns:bas=\"http://www.sella.it/schema/Basics\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n\r\n<soapenv:Header/>\r\n-<soapenv:Body>\r\n\r\n-<fun:FundTransferRequest>\r\n\r\n-<fun:MandatoryField>\r\n\r\n-<fun:HeaderField>\r\n\r\n<fun:Channel>0017</fun:Channel>\r\n\r\n<fun:Subsystem>PLK</fun:Subsystem>\r\n\r\n<fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n\r\n</fun:HeaderField>\r\n\r\n\r\n-<fun:OrderField>\r\n\r\n\r\n-<fun:ConditionalSubject>\r\n\r\n<fun:IBCode/>\r\n\r\n<fun:SubjectId>418127</fun:SubjectId>\r\n\r\n<fun:SubjectExecutorId>418127</fun:SubjectExecutorId>\r\n\r\n<fun:IsCorrespondent/>\r\n\r\n</fun:ConditionalSubject>\r\n\r\n\r\n-<fun:ConditionalOrderAccount>\r\n\r\n<fun:AccountOrderId/>\r\n\r\n<fun:AccountNumber>53101893150</fun:AccountNumber>\r\n\r\n<fun:Iban/>\r\n\r\n</fun:ConditionalOrderAccount>\r\n\r\n\r\n-<fun:ConditionalDebitAccount>\r\n\r\n<fun:DebitAccountId/>\r\n\r\n<fun:DebitAccountNumber/>\r\n\r\n<fun:Iban/>\r\n\r\n</fun:ConditionalDebitAccount>\r\n\r\n\r\n-<fun:ConditionalDebitAccountCommission>\r\n\r\n<fun:DebitAccountId/>\r\n\r\n<fun:DebitAccountNumber/>\r\n\r\n<fun:Iban/>\r\n\r\n</fun:ConditionalDebitAccountCommission>\r\n\r\n</fun:OrderField>\r\n\r\n\r\n-<fun:BeneficiaryField>\r\n\r\n\r\n-<fun:ConditionalBeneficiaryRules>\r\n\r\n<fun:BeneficiaryAccountId/>\r\n\r\n<fun:AccountOrIbanBeneficiary>01707344880</fun:AccountOrIbanBeneficiary>\r\n\r\n<fun:BicBeneficiary/>\r\n\r\n<fun:NationalBankBeneficiaryId/>\r\n\r\n<fun:BeneficiaryName>PL_PAYEE_NAME</fun:BeneficiaryName>\r\n\r\n\r\n-<fun:MandatoryForeignBeneficiaryField>\r\n\r\n<fun:BeneficiaryAddress/>\r\n\r\n<fun:BeneficiaryCity/>\r\n\r\n</fun:MandatoryForeignBeneficiaryField>\r\n\r\n<fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n\r\n</fun:ConditionalBeneficiaryRules>\r\n\r\n</fun:BeneficiaryField>\r\n\r\n\r\n-<fun:AmountDetails>\r\n\r\n<fun:Amount>10</fun:Amount>\r\n\r\n<fun:Currency>EUR</fun:Currency>\r\n\r\n</fun:AmountDetails>\r\n\r\n<fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n\r\n<fun:Reference>PL_REFERENCE</fun:Reference>\r\n\r\n</fun:MandatoryField>\r\n\r\n\r\n-<fun:OptionalField>\r\n\r\n<fun:ExecutionDatePayment/>\r\n\r\n<fun:UserTagAccountMovementId/>\r\n\r\n<fun:Uri/>\r\n\r\n<fun:IsUrgent/>\r\n\r\n<fun:IsInstant/>\r\n\r\n<fun:Cro/>\r\n\r\n<fun:OriginCro/>\r\n\r\n<fun:TicketCustomerDesk/>\r\n\r\n\r\n-<fun:TaxAdvantageView>\r\n\r\n<fun:AdministratorCF/>\r\n\r\n<fun:BeneficiaryCFPIVA/>\r\n\r\n<fun:FirstOrderCFPIVA/>\r\n\r\n<fun:SecondOrderCF/>\r\n\r\n<fun:ThirdOrderCF/>\r\n\r\n<fun:FourthOrderCF/>\r\n\r\n<fun:FifthOrderCF/>\r\n\r\n<fun:SixthOrderCF/>\r\n\r\n<fun:SeventhOrderCF/>\r\n\r\n<fun:EighthOrderCF/>\r\n\r\n<fun:NinthOrderCF/>\r\n\r\n<fun:TenthOrderCF/>\r\n\r\n\r\n-<fun:ConditionalTaxAdvantage>\r\n\r\n<fun:TaxAdvantageId/>\r\n\r\n<fun:TaxAdvantage/>\r\n\r\n</fun:ConditionalTaxAdvantage>\r\n\r\n</fun:TaxAdvantageView>\r\n\r\n<fun:DynamicField/>\r\n\r\n</fun:OptionalField>\r\n\r\n\r\n-<fun:MessageContext>\r\n\r\n<bas:Sender>InternetBanking</bas:Sender>\r\n\r\n<bas:ABI>03268</bas:ABI>\r\n\r\n<bas:Auth-Token/>\r\n\r\n</fun:MessageContext>\r\n\r\n</fun:FundTransferRequest>\r\n\r\n</soapenv:Body>\r\n\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC10_HYpecommissiontestcase_verifyBP058_commvalue_0.15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"// Hype- commission conditioncode BP058\r",
									"var hypeconditioncode = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"][\"tns:ConditionCode\"]\r",
									"console.log(\"hypeconditioncode\", hypeconditioncode);\r",
									"\r",
									"// Hype- commission BP058 verification_commission value 0.15\r",
									"var commissionamount = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"][\"tns:CommissionAmount\"]\r",
									"console.log(\"commissionamount\", commissionamount);\r",
									"\r",
									"tests [\"Hype commissionvalue_amount ----> \"+commissionamount]= commissionamount   ===\"0.15\";\r",
									"\r",
									"tests [\"Hype commissionvalue_amount ----> \"+hypeconditioncode]= hypeconditioncode   ===\"BP058\";\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01218748</fun:IBCode>\r\n                  <fun:SubjectId>7182185</fun:SubjectId>\r\n                  <fun:SubjectExecutorId/>\r\n                  <fun:IsCorrespondent/>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId/>\r\n                  <fun:AccountNumber>52340520970</fun:AccountNumber>\r\n                  <fun:Iban/>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId/>\r\n                  <fun:DebitAccountNumber/>\r\n                  <fun:Iban/>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId/>\r\n                  <fun:DebitAccountNumber/>\r\n                  <fun:Iban/>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId/>\r\n                                <fun:AccountOrIbanBeneficiary>IT42H36772223000EM001087030</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary/>\r\n                  <fun:NationalBankBeneficiaryId/>\r\n                  <fun:BeneficiaryName>FIORELLA SABINO DAVIDE</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Santhi</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity/>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence/>\r\n              </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>CONSEL pratica=998100267640 Santhià</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId/>\r\n            <fun:Uri/>\r\n            <fun:IsUrgent/>\r\n            <fun:IsInstant/>\r\n            <fun:Cro/>\r\n            <fun:OriginCro/>\r\n            <fun:TicketCustomerDesk/>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF/>\r\n               <fun:BeneficiaryCFPIVA/>\r\n               <fun:FirstOrderCFPIVA/>\r\n               <fun:SecondOrderCF/>\r\n               <fun:ThirdOrderCF/>\r\n               <fun:FourthOrderCF/>\r\n               <fun:FifthOrderCF/>\r\n               <fun:SixthOrderCF/>\r\n               <fun:SeventhOrderCF/>\r\n               <fun:EighthOrderCF/>\r\n               <fun:NinthOrderCF/>\r\n               <fun:TenthOrderCF/>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId/>\r\n                  <fun:TaxAdvantage/>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField/>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token/>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC11_Hypecommissionvalue_1.0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"// Hype- commission conditioncode BP058\r",
									"var hypeconditioncode = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"][\"tns:ConditionCode\"]\r",
									"console.log(\"hypeconditioncode\", hypeconditioncode);\r",
									"\r",
									"// Hype- commission BP058 verification_commission value 0.15\r",
									"var commissionamount = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"][\"tns:CommissionAmount\"]\r",
									"console.log(\"commissionamount\", commissionamount);\r",
									"\r",
									"tests [\"Hype commissionvalue_amount ----> \"+commissionamount]= commissionamount   ===\"1.00\";\r",
									"\r",
									"tests [\"Hype commissionvalue_amount ----> \"+hypeconditioncode]= hypeconditioncode   ===\"BP059\";\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESAURITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n     <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>PLK</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>326189</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>326189</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>00393246720</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>               \r\n                  <fun:AccountOrIbanBeneficiary>IT59P0326822311001641490340</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>PL_PAYEE_NAME</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>PL_REFERENCE</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC12_Plick_datavaluata",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"// To verify the contabilie number\r",
									"var contabilenumber = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AccountingOperation\"][\"tns:ContabileNumber\"]\r",
									"console.log(\"contabilenumber\", contabilenumber);\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fund contabilenumber     ----->  \"+contabilenumber] =contabilenumber;\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n     <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>PLK</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>418127</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>418127</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>00393246720</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>               \r\n                  <fun:AccountOrIbanBeneficiary>IT69I0306901000100000068359</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>PL_PAYEE_NAME</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>PL_REFERENCE</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC13_Plick_Blacklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"// To verify the contabilie number\r",
									"var contabilenumber = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AccountingOperation\"][\"tns:ContabileNumber\"]\r",
									"console.log(\"contabilenumber\", contabilenumber);\r",
									"\r",
									"\r",
									"//tests [\"Bonificio Fund contabilenumber     ----->  \"+contabilenumber] =contabilenumber;\r",
									"\r",
									"//tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \" + motivation] = motivation === \"Bonifico <b>POSITIVO</b> alla <b>BLACKLIST</b>\"; \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n     <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>PLK</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>326189</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>326189</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban>IT13D0326801007000393246720</fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>               \r\n                  <fun:AccountOrIbanBeneficiary>ES5401824000610201930933</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>PL_PAYEE_NAME</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>ES</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>PL_REFERENCE</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC14_CVD_Payment_Currentpayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"\r",
									"tests [\"CVD CRO  is   ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"CVD result    ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"CVD Execution Status1  ----->  \"+motivation] = motivation === \"ESAURITO\"; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>00821630</fun:IBCode>\r\n                  <fun:SubjectId>5840592</fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52386666670</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>52386666670</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>78386666676</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName><![CDATA[UXLWLCUUNLLUBMULFZXCTGFUSUFTTWY]]></fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>15.00</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference><![CDATA[NA]]></fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField><![CDATA[<Compravenditadivisa>true</Compravenditadivisa>]]></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC15_CVD_Bookingpayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"\r",
									"tests [\"CVD CRO  is  ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"CVD result    ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"CVD status  ----->  \"+motivation] = motivation === \"PRENOTATO\"; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>00821630</fun:IBCode>\r\n                  <fun:SubjectId>5840592</fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52386666670</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>52386666670</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>78386666676</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName><![CDATA[UXLWLCUUNLLUBMULFZXCTGFUSUFTTWY]]></fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>15.00</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference><![CDATA[NA]]></fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField><![CDATA[<Compravenditadivisa>true</Compravenditadivisa>]]></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC16_CVD-ARsconfino",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"var ARamount=jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse'][\"tns:DetailPayment\"]['tns:AmountDetails']['tns:Amount'];\r",
									"console.log(\"CVD ARamount is\", ARamount);\r",
									"\r",
									"\r",
									"tests [\"CVD CRO is    ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"CVD Result    ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"CVD Execution status ----->  \"+motivation] = motivation === \"ESAURITO\"; \r",
									"tests [\"CVD Arsconfino amount is    ----->  \"+ARamount] =ARamount;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>00821630</fun:IBCode>\r\n                  <fun:SubjectId>5840592</fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52386666670</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>52386666670</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>78386666676</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName><![CDATA[UXLWLCUUNLLUBMULFZXCTGFUSUFTTWY]]></fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>15000.00</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference><![CDATA[NA]]></fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField><![CDATA[<Compravenditadivisa>true</Compravenditadivisa>]]></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC17_interno_ARsconfino_EUR(SHA)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"var ARamount=jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse'][\"tns:DetailPayment\"]['tns:AmountDetails']['tns:Amount'];\r",
									"console.log(\"ineternoAR sconfino amount is\", ARamount);\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESAURITO\"; \r",
									"\r",
									"tests [\"ineternoAR sconfino amount is    ----->  \"+ARamount] =ARamount;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>0000000</fun:SubjectCallerId>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>52375331880</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>O1641490340</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SELBIT2BXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>AB de Villiers</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>15000</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>TEST NEW SOA</fun:Reference>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:IBCode>00418633</fun:IBCode>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC18_interno_fundtransfer_USD(SHA)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//To store CRO\r",
									"pm.environment.set(\"TC18_CRO3\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"]['tns:Cro']);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonifici PaymentId is ----> \" +PaymentId]=PaymentId;\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n     <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>326189</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>326189</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>00393246720</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>               \r\n                  <fun:AccountOrIbanBeneficiary>FR7630003014300005826391557</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SOGEFRPPXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>PL_PAYEE_NAME</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>USD</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Testing team</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC19_interno_fundtransfer_USD(OUR)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Tipo spese non valido\"; \r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>0000000</fun:SubjectCallerId>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>52733746780</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>FR7630003014300005826391557</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SOGEFRPPXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>AB de Villiers</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>USD</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>BEN</fun:KindOfCommission>\r\n            <fun:Reference>TEST NEW SOA</fun:Reference>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:IBCode>00418633</fun:IBCode>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC20_interno_fundtransfer_USD(SHA)_bookingpayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"PRENOTATO_T2S\"; \r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n     <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>326189</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>326189</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>00393246720</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>               \r\n                  <fun:AccountOrIbanBeneficiary>FR7630003014300005826391557</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SOGEFRPPXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>PL_PAYEE_NAME</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>USD</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Testing team</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC21_interno_fundtransfer_USD(BEN)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Tipo spese non valido\"; \r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>0000000</fun:SubjectCallerId>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>52733746780</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>FR7630003014300005826391557</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SOGEFRPPXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>AB de Villiers</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>USD</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>BEN</fun:KindOfCommission>\r\n            <fun:Reference>TEST NEW SOA</fun:Reference>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:IBCode>00418633</fun:IBCode>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC22_Agevolato_Ristrutturazione",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//To store CRO\r",
									"pm.environment.set(\"TC22_CRO2\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"]['tns:Cro']);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"var TaxadvantageName =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:DetailPayment']['tns:TaxAdvantageView']['tns:TaxAdvantageName'];\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonifici PaymentId is ----> \" +PaymentId]=PaymentId;\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									"\r",
									"tests [\"Bonifici TaxAdvantageName is ----> \" +TaxadvantageName]=TaxadvantageName;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>4574527</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT50J0312716000002870000243</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>11</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF>FRLSND91A02A669P</fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA>02333970016</fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA>RSNFNC69R55C665D</fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage>Ristrutturazione</fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC23_Agevolato_Risparmio-energetico",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"var TaxadvantageName =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:DetailPayment']['tns:TaxAdvantageView']['tns:TaxAdvantageName'];\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonifici PaymentId is ----> \" +PaymentId]=PaymentId;\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									"\r",
									"tests [\"Bonifici TaxAdvantageName is ----> \" +TaxadvantageName]=TaxadvantageName;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>4574527</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT50J0312716000002870000243</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>20</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA>02333970016</fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA>VRNPRI62C07I138R</fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage>Risparmio energetico</fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC24_Agevolato_STORNO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferReversalResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferReversalResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferReversalResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferReversalResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonifici PaymentId is ----> \" +PaymentId]=PaymentId;\r",
									"tests[\"Bonificio cancel result is    ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Storno Status1  ----->  \"+motivation] = motivation === \"Bonifico cancellato correttamente\"; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferReversalRequest>\r\n         <fun:ConditionalSubject>\r\n            <fun:IBCode></fun:IBCode>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n            <fun:IsCorrespondent></fun:IsCorrespondent>\r\n         </fun:ConditionalSubject>\r\n         <fun:ConditionalField>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro>{{TC22_CRO2}}</fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:MotivationCode></fun:MotivationCode>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferReversalRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC25_Agevolato_Administatione_Ristrutturazione",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"var TaxadvantageName =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:DetailPayment']['tns:TaxAdvantageView']['tns:TaxAdvantageName'];\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Il codice fiscale o la partita iva del beneficiario è obbligatorio\"; \r",
									"\r",
									"tests [\"Bonifici TaxAdvantageName is ----> \" +TaxadvantageName]=TaxadvantageName;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>4574527</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT50J0312716000002870000243</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>11</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF>RSNFNC69R55C665D</fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF>02333970016</fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage>Ristrutturazione</fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC26_Agevolato_Administatione_Risparmio-energetico",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"var TaxadvantageName =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:DetailPayment']['tns:TaxAdvantageView']['tns:TaxAdvantageName'];\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonifici PaymentId is ----> \" +PaymentId]=PaymentId;\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									"\r",
									"tests [\"Bonifici TaxAdvantageName is ----> \" +TaxadvantageName]=TaxadvantageName;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>4574527</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT50J0312716000002870000243</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>11</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF>FRLSND91A02A669P</fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA>02333970016</fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA>RSNFNC69R55C665D</fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage>Risparmio energetico</fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC27_Agevolato_Administatione_TAXADV-Blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"//To store CRO\r",
									"pm.environment.set(\"CRO2\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"]['tns:Cro']);\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"var Errorcode     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"var TaxadvantageName =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:DetailPayment']['tns:TaxAdvantageView']['tns:TaxAdvantageName'];\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation; \r",
									"\r",
									"tests [\"Bonifici Errorcode is ----> \" + Errorcode]= Errorcode;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>4574527</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT50J0312716000002870000243</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>11</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF>FRLSND91A02A669P</fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA>02333970016</fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA>RSNFNC69R55C665D</fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC28_interno_fundtransfer_OUT_EUR(SHA)_bookingpayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"PRENOTATO_T2S\"; \r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n     <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>326189</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>326189</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>00393246720</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>               \r\n                  <fun:AccountOrIbanBeneficiary>FR7630003014300005826391557</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SOGEFRPPXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>PL_PAYEE_NAME</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Testing team</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC29_interno_fundtransfer_STORNO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferReversalResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferReversalResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferReversalResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferReversalResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonifici PaymentId is ----> \" +PaymentId]=PaymentId;\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Storno Status1  ----->  \"+motivation] = motivation === \"Bonifico cancellato correttamente\"; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferReversalRequest>\r\n         <fun:ConditionalSubject>\r\n            <fun:IBCode></fun:IBCode>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n            <fun:IsCorrespondent></fun:IsCorrespondent>\r\n         </fun:ConditionalSubject>\r\n         <fun:ConditionalField>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro>{{TC18_CRO3}}</fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:MotivationCode></fun:MotivationCode>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferReversalRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC30_Agevolato_Acquisto mobilio per ristrutturazione",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"var TaxadvantageName =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:DetailPayment']['tns:TaxAdvantageView']['tns:TaxAdvantageName'];\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonifici PaymentId is ----> \" +PaymentId]=PaymentId;\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									"\r",
									"tests [\"Bonifici TaxAdvantageName is ----> \" +TaxadvantageName]=TaxadvantageName;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>4574527</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT50J0312716000002870000243</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>20</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA>02333970016</fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA>VRNPRI62C07I138R</fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage>Risparmio energetico</fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC31_Agevolato_Administatione_Acquisto mobilio per ristrutturazione",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"var TaxadvantageName =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:DetailPayment']['tns:TaxAdvantageView']['tns:TaxAdvantageName'];\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonifici PaymentId is ----> \" +PaymentId]=PaymentId;\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									"\r",
									"tests [\"Bonifici TaxAdvantageName is ----> \" +TaxadvantageName]=TaxadvantageName;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>4574527</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT50J0312716000002870000243</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>11</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF>FRLSND91A02A669P</fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA>02333970016</fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA>RSNFNC69R55C665D</fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage>Acquisto mobilio per ristrutturazione</fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC32_interno_fundtransfer_USD(VCH)_Error verification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Tipo spese non valido\"; \r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>0000000</fun:SubjectCallerId>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>52733746780</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>FR7630003014300005826391557</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SOGEFRPPXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>AB de Villiers</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>USD</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>VCH</fun:KindOfCommission>\r\n            <fun:Reference>TEST NEW SOA</fun:Reference>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:IBCode>00418633</fun:IBCode>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC33_verify the Error code:BPAG-0521",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"var ARamount=jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse'][\"tns:DetailPayment\"]['tns:AmountDetails']['tns:Amount'];\r",
									"console.log(\"ineternoAR sconfino amount is\", ARamount);\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation;\r",
									"\r",
									"tests[\"Bonificio Execution Errorcode is  ----->  \"+ErrorCode]=ErrorCode ===\"BPAG-0521\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:BankId>1</fun:BankId>\r\n            <fun:HeaderField>\r\n               <fun:SubjectCallerId>0000000</fun:SubjectCallerId>\r\n               <fun:Channel>0016</fun:Channel>\r\n               <fun:Subsystem>HBO</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber></fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber>52375331880</fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>O1641490340</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>SELBIT2BXXX</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>AB de Villiers</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>150000</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>TEST NEW SOA</fun:Reference>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:SubjectId></fun:SubjectId>\r\n            <fun:IBCode>00418633</fun:IBCode>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryPIVA></fun:BeneficiaryPIVA>\r\n               <fun:BeneficiaryCF></fun:BeneficiaryCF>\r\n               <fun:FirstOrderCF></fun:FirstOrderCF>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC34_Agevolato_verify the Error code:BPAG-0479",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var Errorcode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"var TaxadvantageName =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:DetailPayment']['tns:TaxAdvantageView']['tns:TaxAdvantageName'];\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Il codice fiscale o la partita iva del beneficiario è obbligatorio\"; \r",
									"tests[\"Bonificio Fund Transfer Errorcode is    ----->  \"+Errorcode]  =Errorcode === \"BPAG-0479\";\r",
									"\r",
									"tests [\"Bonifici TaxAdvantageName is ----> \" +TaxadvantageName]=TaxadvantageName;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>4574527</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT50J0312716000002870000243</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>11</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF>02333970016</fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF>RSNFNC69R55C665D</fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage>Ristrutturazione</fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC35_Fundtransfer_BSE_to_HYPE_bookingpayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var title = \"TC37 - Verify the fundtransfer from BSE bank to HYPE bank\";\r",
									" \r",
									"tests[title]= title;\r",
									"\r",
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"PRENOTATO\"; \r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode/>\r\n                  <fun:SubjectId>6920964</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>6920964</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent/>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId/>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban/>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId/>\r\n                  <fun:DebitAccountNumber/>\r\n                  <fun:Iban/>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId/>\r\n                  <fun:DebitAccountNumber/>\r\n                  <fun:Iban/>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId/>\r\n                  <fun:AccountOrIbanBeneficiary>IT43G36772223000EM001248883</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary/>\r\n                  <fun:NationalBankBeneficiaryId/>\r\n                  <fun:BeneficiaryName>FIORELLA SABINO DAVIDE</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress/>\r\n                     <fun:BeneficiaryCity/>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence/>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>12</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>TEST INVIO INTESA SANPAOLO 20180307</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId/>\r\n            <fun:Uri/>\r\n            <fun:IsUrgent/>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <!--Optional:-->\r\n            <fun:MyBank>\r\n               <fun:ApplicationID></fun:ApplicationID>\r\n               <fun:TransactionID></fun:TransactionID>\r\n               <fun:TransactionSubID></fun:TransactionSubID>\r\n            </fun:MyBank>\r\n            <fun:Cro/>\r\n            <fun:OriginCro/>\r\n            <fun:Cioc/>\r\n            <fun:TicketCustomerDesk/>\r\n            <fun:TaxAdvantageView>\r\n               <!--Optional:-->\r\n               <fun:IsBuildingCase/>\r\n               <fun:AdministratorCF/>\r\n               <fun:BeneficiaryCFPIVA/>\r\n               <fun:FirstOrderCFPIVA/>\r\n               <fun:SecondOrderCF/>\r\n               <fun:ThirdOrderCF/>\r\n               <fun:FourthOrderCF/>\r\n               <fun:FifthOrderCF/>\r\n               <fun:SixthOrderCF/>\r\n               <fun:SeventhOrderCF/>\r\n               <fun:EighthOrderCF/>\r\n               <fun:NinthOrderCF/>\r\n               <fun:TenthOrderCF/>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId/>\r\n                  <fun:TaxAdvantage/>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <!--Optional:-->\r\n            <fun:StructuredRemittanceInfo>\r\n               <fun:Tp/>\r\n               <fun:code/>\r\n               <fun:Issr/>\r\n               <fun:Ref/>\r\n            </fun:StructuredRemittanceInfo>\r\n            <fun:DynamicField/>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token/>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> \r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC36_Fundtransfer_BSE_to_HYPE_infragruppo payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode/>\r\n                  <fun:SubjectId>6920964</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>6920964</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent/>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId/>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban/>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId/>\r\n                  <fun:DebitAccountNumber/>\r\n                  <fun:Iban/>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId/>\r\n                  <fun:DebitAccountNumber/>\r\n                  <fun:Iban/>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId/>\r\n                  <fun:AccountOrIbanBeneficiary>IT43G36772223000EM001248883</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary/>\r\n                  <fun:NationalBankBeneficiaryId/>\r\n                  <fun:BeneficiaryName>FIORELLA SABINO DAVIDE</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress/>\r\n                     <fun:BeneficiaryCity/>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence/>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Infragruppo payment</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment/>\r\n            <fun:UserTagAccountMovementId/>\r\n            <fun:Uri/>\r\n            <fun:IsUrgent/>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <!--Optional:-->\r\n            <fun:MyBank>\r\n               <fun:ApplicationID></fun:ApplicationID>\r\n               <fun:TransactionID></fun:TransactionID>\r\n               <fun:TransactionSubID></fun:TransactionSubID>\r\n            </fun:MyBank>\r\n            <fun:Cro/>\r\n            <fun:OriginCro/>\r\n            <fun:Cioc/>\r\n            <fun:TicketCustomerDesk/>\r\n            <fun:TaxAdvantageView>\r\n               <!--Optional:-->\r\n               <fun:IsBuildingCase/>\r\n               <fun:AdministratorCF/>\r\n               <fun:BeneficiaryCFPIVA/>\r\n               <fun:FirstOrderCFPIVA/>\r\n               <fun:SecondOrderCF/>\r\n               <fun:ThirdOrderCF/>\r\n               <fun:FourthOrderCF/>\r\n               <fun:FifthOrderCF/>\r\n               <fun:SixthOrderCF/>\r\n               <fun:SeventhOrderCF/>\r\n               <fun:EighthOrderCF/>\r\n               <fun:NinthOrderCF/>\r\n               <fun:TenthOrderCF/>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId/>\r\n                  <fun:TaxAdvantage/>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <!--Optional:-->\r\n            <fun:StructuredRemittanceInfo>\r\n               <fun:Tp/>\r\n               <fun:code/>\r\n               <fun:Issr/>\r\n               <fun:Ref/>\r\n            </fun:StructuredRemittanceInfo>\r\n            <fun:DynamicField/>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token/>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> \r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC37_Agevolato_verify the Error code:BPAG-04780",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var Errorcode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"var TaxadvantageName =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:DetailPayment']['tns:TaxAdvantageView']['tns:TaxAdvantageName'];\r",
									"//var moment= require('moment');\r",
									"//pm.globals.set(\"today\",moment().format(\"DD-MM-YYYY\"));\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Validate Bonificio Fund Transfer status ->FAILURE', function () {\r",
									"pm.expect(result).to.be.equal(\"FAILURE\");\r",
									"pm.expect(motivation).to.be.contains(\"Il codice fiscale del fruitore Ã¨ obbligatorio\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test('Validate Bonificio Execution Status ->Il codice fiscale del fruitore Ã¨ obbligatorio ', function () {\r",
									"pm.expect(motivation).to.be.contains(\"Il codice fiscale del fruitore Ã¨ obbligatorio\");\r",
									"});\r",
									"\r",
									"pm.test('Validate Bonificio Fund Transfer Errorcode is BPAG-0480 ', function () {\r",
									"pm.expect(Errorcode).to.be.equal(\"BPAG-0480\");\r",
									"});\r",
									"\r",
									"pm.test('Validate Bonificio Fund Transfer Errorcode is TaxAdvantageName->Ristrutturazione ', function () {\r",
									"pm.expect(TaxadvantageName).to.be.equal(\"Ristrutturazione\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>4574527</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>7017159</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT50J0312716000002870000243</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Miller</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress>Valasaravakkam</fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity>Chennai</fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>11</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA>FRLSND91A02A669P</fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF>9</fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage>Ristrutturazione</fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SME_Bonifci",
			"item": [
				{
					"name": "INPUT FOR BENEFICIARY'S BANK IN ITALY",
					"item": [
						{
							"name": "TC1_Verify the condizione code if the payment Cur=EUR|Country of beneficiary =ITALY|Tipo Spese=SHA |Urgent Payment= False",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>IT74Q0339512900052104278670</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "TC2_Verify the condizione code if the payment Cur=EUR|Country of beneficiary =ITALY|Tipo Spese=SHA |Urgent Payment= True",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>IT74Q0339512900052104278670</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>TRUE</fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "TC3_Verify the condizione code if the payment Cur=SEK|Country of beneficiary =ITALY|Tipo Spese=SHA |Urgent Payment= False",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>IT74Q0339512900052104278670</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>SEK</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "INPUT FOR BENEFICIARY'S BANK NOT IN ITALY",
					"item": [
						{
							"name": "TC4_Verify the condizione code if the payment Cur=EUR|Country of beneficiary =True|Tipo Spese=SHA |Urgent Payment= False",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>FR7630076021471319360020074</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "TC5_Verify the condizione code if the payment Cur=EUR|Country of beneficiary =False|Tipo Spese=SHA |Urgent Payment= False",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>CH820020820891635640Q</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>UBSWCHZH80A</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>CH</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "TC6_Verify the condizione code if the payment Cur=EUR|Country of beneficiary =False|Tipo Spese=OUR |Urgent Payment= False",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>CH820020820891635640Q</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>UBSWCHZH80A</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>CH</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>OUR</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "TC7_Verify the condizione code if the payment Cur=EUR|Country of beneficiary =False|Tipo Spese=OUR |Urgent Payment= True",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>CH820020820891635640Q</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>UBSWCHZH80A</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>CH</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>OUR</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>True</fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Tc8_Verify the condizione code if the payment Cur=EUR|Country of beneficiary =False|Tipo Spese=BEN |Urgent Payment= True",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"\r",
											"\r",
											"var Motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:Response\"][\"tns:Motivation\"];\r",
											"\r",
											"var Result = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:Response\"][\"tns:Result\"];\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer   Motivation  is   ----->  \"+Motivation] =Motivation;\r",
											"tests [\"Bonificio Fundtransfer  Result is----->  \"+Result] =Result;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>CH820020820891635640Q</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>UBSWCHZH80A</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>CH</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>BEN</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>True</fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "TC9_Verify the condizione code if the payment Cur=EUR|Country of beneficiary =False|Tipo Spese=BEN |Urgent Payment= False",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"\r",
											"\r",
											"var Motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:Response\"][\"tns:Motivation\"];\r",
											"\r",
											"var Result = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:Response\"][\"tns:Result\"];\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer   Motivation  is   ----->  \"+Motivation] =Motivation;\r",
											"tests [\"Bonificio Fundtransfer  Result is----->  \"+Result] =Result;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>CH820020820891635640Q</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>UBSWCHZH80A</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>CH</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>BEN</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "TC10_Verify the condizione code if the payment Cur=EUR|Country of beneficiary =True|Tipo Spese=SHA |Urgent Payment= True",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>FR7630076021471319360020074</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>True</fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "TC11_Verify the condizione code if the payment Cur=SEK|Country of beneficiary =True|Tipo Spese=SHA |Urgent Payment= False",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>FR7630076021471319360020074</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>SEK</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Tc12_Verify the condizione code if the payment Cur=SEK|Country of beneficiary =False|Tipo Spese=SHA |Urgent Payment= False",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"//-----\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>CH820020820891635640Q</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>UBSWCHZH80A</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>CH</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>SEK</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Tc13_Verify the condizione code if the payment Cur=EUR|Country of beneficiary =False|Tipo Spese=SHA |Urgent Payment= True",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>CH820020820891635640Q</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary>UBSWCHZH80A</fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>CH</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>True</fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "INPUT FOR INSTANT PAYMENT",
					"item": [
						{
							"name": "Verify the condizione code if the payment Cur=EUR|Country of beneficiary =SEPA|Tipo Spese=SHA |instant Payment= TRUE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//postman success validation\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
											"});\r",
											"\r",
											"//Convert XML response to JSON\r",
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(\"JSON response\", jsonData);\r",
											"//Get CroID value\r",
											"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
											"console.log(\"CroID is\", Cro);\r",
											"\r",
											"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
											"console.log(\"currency is\", currency);\r",
											"\r",
											"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
											"console.log(\"Kindcommission is\", Kindcommission);\r",
											"\r",
											"\r",
											"var path = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"];\r",
											"console.log(path);\r",
											"\r",
											"var noofconditioncode = [];\r",
											"var conditioncode_details = [];\r",
											"// loop through the collection\r",
											"for(var i = 0; i < path.length; i++) {\r",
											"var noofCondition = path.length;\r",
											"conditioncode_details.push(path[i][\"tns:ConditionCode\"])\r",
											"}\r",
											"\r",
											"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode_details] =conditioncode_details;\r",
											"\r",
											"\r",
											"\r",
											"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
											"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
											"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode></fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>IT44W36772223000EM000043604</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.11</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>TEST CASE sepa</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
									"host": [
										"{{webservice}}"
									],
									"path": [
										"FundTransfer",
										"FundTransfer"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "OPB",
			"item": [
				{
					"name": "TC1_Create - NumeroRateTotali=10 & NumeroRatePagate=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"//Get CroID value\r",
									"var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:createOPBReponse\"][\"inp1:IEsitoInserimentoOpBonifico\"][\"inp1:Esito\"];\r",
									"console.log(\"Esito is\", Esito);\r",
									"\r",
									"var IdentificativoOPBonifico = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:createOPBReponse\"][\"inp1:IEsitoInserimentoOpBonifico\"][\"inp1:IdentificativoOPBonifico\"];\r",
									"pm.environment.set(\"OPB_IdentificativoOPBonifico\",IdentificativoOPBonifico);\r",
									"var Desc = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:createOPBReponse\"][\"inp1:IEsitoInserimentoOpBonifico\"][\"inp1:Motivazione\"][\"inp1:Desc\"];\r",
									"\r",
									"tests[\"Esito is ---->\"+Esito]=Esito ===\"Successo\";\r",
									"tests[\"IdentificativoOPBonifico  ---> \"+IdentificativoOPBonifico]=IdentificativoOPBonifico;\r",
									"tests[\"Desc is ---->\"+Desc]=Desc;\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:opb=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/OPBonifico\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <opb:createOPBRequest>\r\n         <opb:InsertOPB>\r\n            <!--Optional:-->\r\n            <opb:DataAttivazione>{{OPBtoday_date}}</opb:DataAttivazione>\r\n            <opb:ContoAddebito>52890589471</opb:ContoAddebito>\r\n            <!--Optional:-->\r\n            <opb:SoggettoOrdinanteId>1243019</opb:SoggettoOrdinanteId>\r\n            <opb:CoordinateBeneficiario>IT85J0326830549024890589470</opb:CoordinateBeneficiario>\r\n            <!--Optional:-->\r\n            <opb:Importo>500.00</opb:Importo>\r\n            <!--Optional:-->\r\n            <opb:CodiceDivisa>EUR</opb:CodiceDivisa>\r\n            <opb:OrdinanteCausale>prova</opb:OrdinanteCausale>\r\n            <opb:ClienteBeneficiario>abc def</opb:ClienteBeneficiario>\r\n            <!--Optional:-->\r\n            <opb:NumeroRateTotali>5</opb:NumeroRateTotali>\r\n            <!--Optional:-->\r\n            <opb:NumeroRatePagate>0</opb:NumeroRatePagate>\r\n            <!--Optional:-->\r\n            <opb:Periodicita>1</opb:Periodicita>\r\n            <!--Optional:-->\r\n            <opb:GiornoValuta>22</opb:GiornoValuta>\r\n            <!--Optional:-->\r\n            <opb:TipoGiornoValuta>ORDINANTE</opb:TipoGiornoValuta>\r\n            <!--Optional:-->\r\n            <opb:Descrizione>prova test</opb:Descrizione>\r\n            <!--Optional:-->\r\n            <opb:DataUltimaEsecuzione></opb:DataUltimaEsecuzione>\r\n            <!--Optional:-->\r\n            <opb:DataProssimaEsecuzione>22102021</opb:DataProssimaEsecuzione>\r\n            <!--Optional:-->\r\n            <opb:DataFineSospensione></opb:DataFineSospensione>\r\n            <!--Optional:-->\r\n            <opb:ForzaturaOpDatiIncompleti></opb:ForzaturaOpDatiIncompleti>\r\n            <!--Optional:-->\r\n            <opb:Messaggio></opb:Messaggio>\r\n            <opb:Product>0</opb:Product>\r\n         </opb:InsertOPB>\r\n         <opb:MessageContext>\r\n            <bas:Sender>OpenApiIntra</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </opb:MessageContext>\r\n      </opb:createOPBRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://pp-soa.bansel.it:80/osb/OPBonifico/OPBonifico",
							"protocol": "http",
							"host": [
								"pp-soa",
								"bansel",
								"it"
							],
							"port": "80",
							"path": [
								"osb",
								"OPBonifico",
								"OPBonifico"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC2_Create - NumeroRateTotali=0 & NumeroRatePagate=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"//Get CroID value\r",
									"var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:createOPBReponse\"][\"inp1:IEsitoInserimentoOpBonifico\"][\"inp1:Esito\"];\r",
									"console.log(\"Esito is\", Esito);\r",
									"\r",
									"var IdentificativoOPBonifico = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:createOPBReponse\"][\"inp1:IEsitoInserimentoOpBonifico\"][\"inp1:IdentificativoOPBonifico\"];\r",
									"\r",
									"var Desc = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:createOPBReponse\"][\"inp1:IEsitoInserimentoOpBonifico\"][\"inp1:Motivazione\"][\"inp1:Desc\"][1];\r",
									"\r",
									"tests[\"Esito is ---->\"+Esito]=Esito ===\"Errore\";\r",
									"\r",
									"tests[\"Desc is ---->\"+Desc]=Desc===\"OP NON Inserito\";\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:opb=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/OPBonifico\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <opb:createOPBRequest>\r\n         <opb:InsertOPB>\r\n            <!--Optional:-->\r\n            <opb:DataAttivazione>{{OPBtoday_date}}</opb:DataAttivazione>\r\n            <opb:ContoAddebito>52890589471</opb:ContoAddebito>\r\n            <!--Optional:-->\r\n            <opb:SoggettoOrdinanteId>1243019</opb:SoggettoOrdinanteId>\r\n            <opb:CoordinateBeneficiario>IT85J0326830549024890589470</opb:CoordinateBeneficiario>\r\n            <!--Optional:-->\r\n            <opb:Importo>500.00</opb:Importo>\r\n            <!--Optional:-->\r\n            <opb:CodiceDivisa>EUR</opb:CodiceDivisa>\r\n            <opb:OrdinanteCausale>prova</opb:OrdinanteCausale>\r\n            <opb:ClienteBeneficiario>abc def</opb:ClienteBeneficiario>\r\n            <!--Optional:-->\r\n            <opb:NumeroRateTotali>0</opb:NumeroRateTotali>\r\n            <!--Optional:-->\r\n            <opb:NumeroRatePagate>0</opb:NumeroRatePagate>\r\n            <!--Optional:-->\r\n            <opb:Periodicita>1</opb:Periodicita>\r\n            <!--Optional:-->\r\n            <opb:GiornoValuta>22</opb:GiornoValuta>\r\n            <!--Optional:-->\r\n            <opb:TipoGiornoValuta>ORDINANTE</opb:TipoGiornoValuta>\r\n            <!--Optional:-->\r\n            <opb:Descrizione>prova test</opb:Descrizione>\r\n            <!--Optional:-->\r\n            <opb:DataUltimaEsecuzione></opb:DataUltimaEsecuzione>\r\n            <!--Optional:-->\r\n            <opb:DataProssimaEsecuzione>{{OPB_BookingPayment}}</opb:DataProssimaEsecuzione>\r\n            <!--Optional:-->\r\n            <opb:DataFineSospensione></opb:DataFineSospensione>\r\n            <!--Optional:-->\r\n            <opb:ForzaturaOpDatiIncompleti></opb:ForzaturaOpDatiIncompleti>\r\n            <!--Optional:-->\r\n            <opb:Messaggio></opb:Messaggio>\r\n            <opb:Product>0</opb:Product>\r\n         </opb:InsertOPB>\r\n         <opb:MessageContext>\r\n            <bas:Sender>OpenApiIntra</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </opb:MessageContext>\r\n      </opb:createOPBRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://pp-soa.bansel.it:80/osb/OPBonifico/OPBonifico",
							"protocol": "http",
							"host": [
								"pp-soa",
								"bansel",
								"it"
							],
							"port": "80",
							"path": [
								"osb",
								"OPBonifico",
								"OPBonifico"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC3_Create - NumeroRateTotali=0 & NumeroRatePagate=10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"//Get CroID value\r",
									"var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:createOPBReponse\"][\"inp1:IEsitoInserimentoOpBonifico\"][\"inp1:Esito\"];\r",
									"console.log(\"Esito is\", Esito);\r",
									"\r",
									"var IdentificativoOPBonifico = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:createOPBReponse\"][\"inp1:IEsitoInserimentoOpBonifico\"][\"inp1:IdentificativoOPBonifico\"];\r",
									"\r",
									"var Desc = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:createOPBReponse\"][\"inp1:IEsitoInserimentoOpBonifico\"][\"inp1:Motivazione\"][\"inp1:Desc\"][2];\r",
									"\r",
									"tests[\"Esito is ---->\"+Esito]=Esito ===\"Errore\";\r",
									"\r",
									"tests[\"Desc is ---->\"+Desc]=Desc===\"OP NON Inserito\";\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:opb=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/OPBonifico\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <opb:createOPBRequest>\r\n         <opb:InsertOPB>\r\n            <!--Optional:-->\r\n            <opb:DataAttivazione>{{OPBtoday_date}}</opb:DataAttivazione>\r\n            <opb:ContoAddebito>52890589471</opb:ContoAddebito>\r\n            <!--Optional:-->\r\n            <opb:SoggettoOrdinanteId>1243019</opb:SoggettoOrdinanteId>\r\n            <opb:CoordinateBeneficiario>IT85J0326830549024890589470</opb:CoordinateBeneficiario>\r\n            <!--Optional:-->\r\n            <opb:Importo>500.00</opb:Importo>\r\n            <!--Optional:-->\r\n            <opb:CodiceDivisa>EUR</opb:CodiceDivisa>\r\n            <opb:OrdinanteCausale>prova</opb:OrdinanteCausale>\r\n            <opb:ClienteBeneficiario>abc def</opb:ClienteBeneficiario>\r\n            <!--Optional:-->\r\n            <opb:NumeroRateTotali>0</opb:NumeroRateTotali>\r\n            <!--Optional:-->\r\n            <opb:NumeroRatePagate>10</opb:NumeroRatePagate>\r\n            <!--Optional:-->\r\n            <opb:Periodicita>1</opb:Periodicita>\r\n            <!--Optional:-->\r\n            <opb:GiornoValuta>22</opb:GiornoValuta>\r\n            <!--Optional:-->\r\n            <opb:TipoGiornoValuta>ORDINANTE</opb:TipoGiornoValuta>\r\n            <!--Optional:-->\r\n            <opb:Descrizione>prova test</opb:Descrizione>\r\n            <!--Optional:-->\r\n            <opb:DataUltimaEsecuzione></opb:DataUltimaEsecuzione>\r\n            <!--Optional:-->\r\n            <opb:DataProssimaEsecuzione>{{OPB_BookingPayment}}</opb:DataProssimaEsecuzione>\r\n            <!--Optional:-->\r\n            <opb:DataFineSospensione></opb:DataFineSospensione>\r\n            <!--Optional:-->\r\n            <opb:ForzaturaOpDatiIncompleti></opb:ForzaturaOpDatiIncompleti>\r\n            <!--Optional:-->\r\n            <opb:Messaggio></opb:Messaggio>\r\n            <opb:Product>0</opb:Product>\r\n         </opb:InsertOPB>\r\n         <opb:MessageContext>\r\n            <bas:Sender>OpenApiIntra</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </opb:MessageContext>\r\n      </opb:createOPBRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://pp-soa.bansel.it:80/osb/OPBonifico/OPBonifico",
							"protocol": "http",
							"host": [
								"pp-soa",
								"bansel",
								"it"
							],
							"port": "80",
							"path": [
								"osb",
								"OPBonifico",
								"OPBonifico"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC4_Modifica-insert the op_id & Numeroratetotali=15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"//Get CroID value\r",
									"var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:updateOPBReponse\"][\"tns:IEsitoModificaOpBonifico\"][\"tns:Esito\"];\r",
									"\r",
									"\r",
									"var Codice = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:updateOPBReponse\"][\"tns:IEsitoModificaOpBonifico\"][\"tns:ListaCommissione\"][\"tns:Commissione\"][\"tns:Codice\"];\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Esito is ---->\"+Esito]=Esito ===\"Successo\";\r",
									"\r",
									"tests[\"Codice is ---->\"+Codice]=Codice;\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:opb=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/OPBonifico\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <opb:updateOPBRequest>\r\n         <opb:ModificaOPB>\r\n            <opb:IdentificativoOPBonifico>{{OPB_IdentificativoOPBonifico}}</opb:IdentificativoOPBonifico>\r\n            <opb:ContoOrdinante>52890589471</opb:ContoOrdinante>\r\n            <opb:ContoAddebito></opb:ContoAddebito>\r\n            <!--Optional:-->\r\n            <opb:SoggettoOrdinanteId>1243019</opb:SoggettoOrdinanteId>\r\n            <opb:CoordinateBeneficiario></opb:CoordinateBeneficiario>\r\n            <!--Optional:-->\r\n            <opb:Importo></opb:Importo>\r\n            <!--Optional:-->\r\n            <opb:CodiceDivisa></opb:CodiceDivisa>\r\n            <opb:OrdinanteCausale></opb:OrdinanteCausale>\r\n            <opb:ClienteBeneficiario></opb:ClienteBeneficiario>\r\n            <!--Optional:-->\r\n            <opb:NumeroRateTotali>15</opb:NumeroRateTotali>\r\n            <!--Optional:-->\r\n            <opb:Periodicita></opb:Periodicita>\r\n            <opb:GiornoValuta></opb:GiornoValuta>\r\n            <opb:TipoGiornoValuta></opb:TipoGiornoValuta>\r\n            <opb:Descrizione></opb:Descrizione>\r\n            <opb:DataProssimaEsecuzione></opb:DataProssimaEsecuzione>\r\n            <opb:Product></opb:Product>\r\n         </opb:ModificaOPB>\r\n         <opb:MessageContext>\r\n            <bas:Sender>OpenApiIntra</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </opb:MessageContext>\r\n      </opb:updateOPBRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://pp-soa.bansel.it:80/osb/OPBonifico/OPBonifico",
							"protocol": "http",
							"host": [
								"pp-soa",
								"bansel",
								"it"
							],
							"port": "80",
							"path": [
								"osb",
								"OPBonifico",
								"OPBonifico"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC5_Modifica-insert the op_id & Numeroratetotali=0 (while create it was NR=10)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"//Get CroID value\r",
									"var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:updateOPBReponse\"][\"tns:IEsitoModificaOpBonifico\"][\"tns:Esito\"];\r",
									"\r",
									"\r",
									"var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:updateOPBReponse\"][\"tns:IEsitoModificaOpBonifico\"][\"tns:Motivazione\"][\"tns:Desc\"];\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Esito is --> \"+Esito]=Esito ===\"Errore\";\r",
									"\r",
									"tests[\"Motivazione is  --->\"+Motivazione]=Motivazione ===\"Il nuovo numero di rate e' inferiore al numero di rate gia' elaborate, in questo caso e' necessario revocare il corrente ordine e crearne uno nuovo\";\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:opb=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/OPBonifico\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <opb:updateOPBRequest>\r\n         <opb:ModificaOPB>\r\n            <opb:IdentificativoOPBonifico>{{OPB_IdentificativoOPBonifico}}</opb:IdentificativoOPBonifico>\r\n            <opb:ContoOrdinante>52890589471</opb:ContoOrdinante>\r\n            <opb:ContoAddebito></opb:ContoAddebito>\r\n            <!--Optional:-->\r\n            <opb:SoggettoOrdinanteId>1243019</opb:SoggettoOrdinanteId>\r\n            <opb:CoordinateBeneficiario></opb:CoordinateBeneficiario>\r\n            <!--Optional:-->\r\n            <opb:Importo></opb:Importo>\r\n            <!--Optional:-->\r\n            <opb:CodiceDivisa></opb:CodiceDivisa>\r\n            <opb:OrdinanteCausale></opb:OrdinanteCausale>\r\n            <opb:ClienteBeneficiario></opb:ClienteBeneficiario>\r\n            <!--Optional:-->\r\n            <opb:NumeroRateTotali>0</opb:NumeroRateTotali>\r\n            <!--Optional:-->\r\n            <opb:Periodicita></opb:Periodicita>\r\n            <opb:GiornoValuta></opb:GiornoValuta>\r\n            <opb:TipoGiornoValuta></opb:TipoGiornoValuta>\r\n            <opb:Descrizione></opb:Descrizione>\r\n            <opb:DataProssimaEsecuzione></opb:DataProssimaEsecuzione>\r\n            <opb:Product></opb:Product>\r\n         </opb:ModificaOPB>\r\n         <opb:MessageContext>\r\n            <bas:Sender>OpenApiIntra</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </opb:MessageContext>\r\n      </opb:updateOPBRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://pp-soa.bansel.it:80/osb/OPBonifico/OPBonifico",
							"protocol": "http",
							"host": [
								"pp-soa",
								"bansel",
								"it"
							],
							"port": "80",
							"path": [
								"osb",
								"OPBonifico",
								"OPBonifico"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//current date",
							"var moment= require('moment');",
							"postman.setEnvironmentVariable(\"OPBtoday_date\",moment().format(\"DDMMYYYY\"));",
							"",
							"//futuredate",
							"var next_sevendays=moment().add(73,'days')",
							"postman.setEnvironmentVariable(\"OPB_BookingPayment\",moment(next_sevendays).format(\"DDMMYYYY\"));"
						]
					}
				}
			]
		},
		{
			"name": "SME_IBcode_contains_RB",
			"item": [
				{
					"name": "Validate the \"Execution\" functionality when IBcode contains \"RB\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"//Get PaymentId value\r",
									"var PaymentId = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:PaymentId\"];\r",
									"console.log(\"PaymentId is\", PaymentId);\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"FAILURE\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"L'utente informativo non è valido per il sottosistema SME\"; \r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>RB-H2O310321170541US</fun:IBCode>\r\n                  <fun:SubjectId>2179639</fun:SubjectId>\r\n                  <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>IT74Q0339512900052104278670</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Test case 1</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate the \"verification\" functionality when IBcode contains \"RB\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
									"console.log(\"currency is\", currency);\r",
									"\r",
									"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
									"console.log(\"Kindcommission is\", Kindcommission);\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"var conditioncode = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"][\"tns:ConditionCode\"];\r",
									"console.log(conditioncode);\r",
									"\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+conditioncode] =conditioncode===\"BP043\";\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
									"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
									"tests[\"Motivazione is  --->\"+motivation]=motivation===\"ESEGUITO\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>RB-H2O310321170541US</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>                \r\n                  <fun:AccountOrIbanBeneficiary>FR7630076021471319360020074</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1.01</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>SME_Informative</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent></fun:IsUrgent>\r\n            <fun:IsInstant></fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n              <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n           <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Websella_packetcommission",
			"item": [
				{
					"name": "Websella_packet commission_instantpayment=TRUE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
									"console.log(\"currency is\", currency);\r",
									"\r",
									"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
									"console.log(\"Kindcommission is\", Kindcommission);\r",
									"\r",
									"//var ConditionCode = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"][\"tns:ConditionCode\"];\r",
									"//console.log(\"ConditionCode is\", ConditionCode);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
									"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
									"//tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+ConditionCode] =ConditionCode;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <fun:FundTransferRequest>\r\n            <fun:MandatoryField>\r\n                <fun:HeaderField>\r\n                    <fun:Channel>0017</fun:Channel>\r\n                    <fun:Subsystem>I_B</fun:Subsystem>\r\n                    <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n                </fun:HeaderField>\r\n                <fun:OrderField>\r\n                    <fun:ConditionalSubject>\r\n                        <fun:IBCode>01218748</fun:IBCode>\r\n                        <fun:SubjectId>2491110</fun:SubjectId>\r\n                        <fun:SubjectExecutorId/>\r\n                        <fun:IsCorrespondent/>\r\n                    </fun:ConditionalSubject>\r\n                    <fun:ConditionalOrderAccount>\r\n                        <fun:AccountOrderId/>\r\n                        <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalOrderAccount>\r\n                    <fun:ConditionalDebitAccount>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccount>\r\n                    <fun:ConditionalDebitAccountCommission>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccountCommission>\r\n                </fun:OrderField>\r\n                <fun:BeneficiaryField>\r\n                    <fun:ConditionalBeneficiaryRules>\r\n                        <fun:BeneficiaryAccountId/>\r\n                        <fun:AccountOrIbanBeneficiary>IT48P0339512900052802229180</fun:AccountOrIbanBeneficiary>\r\n                        <fun:BicBeneficiary/>\r\n                        <fun:NationalBankBeneficiaryId/>\r\n                        <fun:BeneficiaryName>FIORELLA SABINO DAVIDE</fun:BeneficiaryName>\r\n                        <fun:MandatoryForeignBeneficiaryField>\r\n                            <fun:BeneficiaryAddress>Santhi</fun:BeneficiaryAddress>\r\n                            <fun:BeneficiaryCity/>\r\n                        </fun:MandatoryForeignBeneficiaryField>\r\n                        <fun:IsoBeneficiaryResidence/>\r\n                    </fun:ConditionalBeneficiaryRules>\r\n                </fun:BeneficiaryField>\r\n                <fun:AmountDetails>\r\n                    <fun:Amount>1</fun:Amount>\r\n                    <fun:Currency>EUR</fun:Currency>\r\n                </fun:AmountDetails>\r\n                <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n                <fun:Reference>CONSEL pratica=998100267640 Santhià</fun:Reference>\r\n            </fun:MandatoryField>\r\n            <fun:OptionalField>\r\n                <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n                <fun:UserTagAccountMovementId/>\r\n                <fun:Uri/>\r\n                <fun:IsUrgent/>\r\n                <fun:IsInstant>true</fun:IsInstant>\r\n                <fun:Cro/>\r\n                <fun:OriginCro/>\r\n                <fun:TicketCustomerDesk/>\r\n                <fun:TaxAdvantageView>\r\n                    <fun:AdministratorCF/>\r\n                    <fun:BeneficiaryCFPIVA/>\r\n                    <fun:FirstOrderCFPIVA/>\r\n                    <fun:SecondOrderCF/>\r\n                    <fun:ThirdOrderCF/>\r\n                    <fun:FourthOrderCF/>\r\n                    <fun:FifthOrderCF/>\r\n                    <fun:SixthOrderCF/>\r\n                    <fun:SeventhOrderCF/>\r\n                    <fun:EighthOrderCF/>\r\n                    <fun:NinthOrderCF/>\r\n                    <fun:TenthOrderCF/>\r\n                    <fun:ConditionalTaxAdvantage>\r\n                        <fun:TaxAdvantageId/>\r\n                        <fun:TaxAdvantage/>\r\n                    </fun:ConditionalTaxAdvantage>\r\n                </fun:TaxAdvantageView>\r\n                <fun:DynamicField/>\r\n            </fun:OptionalField>\r\n            <fun:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <bas:Auth-Token/>\r\n            </fun:MessageContext>\r\n        </fun:FundTransferRequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Websella_packet commission_instantpayment=FALSE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"var currency = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AmountDetails\"][\"tns:Currency\"];\r",
									"console.log(\"currency is\", currency);\r",
									"\r",
									"var Kindcommission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:KindofCommission\"];\r",
									"console.log(\"Kindcommission is\", Kindcommission);\r",
									"\r",
									"var ConditionCode = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:ListOfCommission\"][\"tns:CommissionDetail\"][\"tns:ConditionCode\"];\r",
									"console.log(\"ConditionCode is\", ConditionCode);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fundtransfer CRO   is  ----->  \"+Cro] =Cro;\r",
									"tests [\"Bonificio Fundtransfer currency  is   ----->  \"+currency] =currency;\r",
									"tests [\"Bonificio Fundtransfer   Kindcommission  is   ----->  \"+Kindcommission] =Kindcommission;\r",
									"tests [\"Bonificio Fundtransfer  ConditionCode    is ----->  \"+ConditionCode] =ConditionCode;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <fun:FundTransferRequest>\r\n            <fun:MandatoryField>\r\n                <fun:HeaderField>\r\n                    <fun:Channel>0017</fun:Channel>\r\n                    <fun:Subsystem>I_B</fun:Subsystem>\r\n                    <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n                </fun:HeaderField>\r\n                <fun:OrderField>\r\n                    <fun:ConditionalSubject>\r\n                        <fun:IBCode>01218748</fun:IBCode>\r\n                        <fun:SubjectId>2491110</fun:SubjectId>\r\n                        <fun:SubjectExecutorId/>\r\n                        <fun:IsCorrespondent/>\r\n                    </fun:ConditionalSubject>\r\n                    <fun:ConditionalOrderAccount>\r\n                        <fun:AccountOrderId/>\r\n                        <fun:AccountNumber>52733746780</fun:AccountNumber>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalOrderAccount>\r\n                    <fun:ConditionalDebitAccount>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccount>\r\n                    <fun:ConditionalDebitAccountCommission>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccountCommission>\r\n                </fun:OrderField>\r\n                <fun:BeneficiaryField>\r\n                    <fun:ConditionalBeneficiaryRules>\r\n                        <fun:BeneficiaryAccountId/>\r\n                        <fun:AccountOrIbanBeneficiary>IT48P0339512900052802229180</fun:AccountOrIbanBeneficiary>\r\n                        <fun:BicBeneficiary/>\r\n                        <fun:NationalBankBeneficiaryId/>\r\n                        <fun:BeneficiaryName>FIORELLA SABINO DAVIDE</fun:BeneficiaryName>\r\n                        <fun:MandatoryForeignBeneficiaryField>\r\n                            <fun:BeneficiaryAddress>Santhi</fun:BeneficiaryAddress>\r\n                            <fun:BeneficiaryCity/>\r\n                        </fun:MandatoryForeignBeneficiaryField>\r\n                        <fun:IsoBeneficiaryResidence/>\r\n                    </fun:ConditionalBeneficiaryRules>\r\n                </fun:BeneficiaryField>\r\n                <fun:AmountDetails>\r\n                    <fun:Amount>1</fun:Amount>\r\n                    <fun:Currency>EUR</fun:Currency>\r\n                </fun:AmountDetails>\r\n                <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n                <fun:Reference>CONSEL pratica=998100267640 Santhià</fun:Reference>\r\n            </fun:MandatoryField>\r\n            <fun:OptionalField>\r\n                <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n                <fun:UserTagAccountMovementId/>\r\n                <fun:Uri/>\r\n                <fun:IsUrgent/>\r\n                <fun:IsInstant>False</fun:IsInstant>\r\n                <fun:Cro/>\r\n                <fun:OriginCro/>\r\n                <fun:TicketCustomerDesk/>\r\n                <fun:TaxAdvantageView>\r\n                    <fun:AdministratorCF/>\r\n                    <fun:BeneficiaryCFPIVA/>\r\n                    <fun:FirstOrderCFPIVA/>\r\n                    <fun:SecondOrderCF/>\r\n                    <fun:ThirdOrderCF/>\r\n                    <fun:FourthOrderCF/>\r\n                    <fun:FifthOrderCF/>\r\n                    <fun:SixthOrderCF/>\r\n                    <fun:SeventhOrderCF/>\r\n                    <fun:EighthOrderCF/>\r\n                    <fun:NinthOrderCF/>\r\n                    <fun:TenthOrderCF/>\r\n                    <fun:ConditionalTaxAdvantage>\r\n                        <fun:TaxAdvantageId/>\r\n                        <fun:TaxAdvantage/>\r\n                    </fun:ConditionalTaxAdvantage>\r\n                </fun:TaxAdvantageView>\r\n                <fun:DynamicField/>\r\n            </fun:OptionalField>\r\n            <fun:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <bas:Auth-Token/>\r\n            </fun:MessageContext>\r\n        </fun:FundTransferRequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search_fundtransfer",
			"item": [
				{
					"name": "TC1_Validate_CRO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //To store Accountid\r",
									"pm.environment.set(\"Accountid\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:OrderAccountId\"]);\r",
									"//To store ordercurrencydate\r",
									"pm.environment.set(\"OrdercurrencyDate\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:OrderCurrencyDate\"]);\r",
									"//To store Insertiondate\r",
									"pm.environment.set(\"InsertionDatePaymentDate\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:InsertionDatePayment\"]);\r",
									"\r",
									"//To store executiondate\r",
									"pm.environment.set(\"Executiondate\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:ExecutionDate\"]);\r",
									"//To store Beneficiarycurrencydate\r",
									"pm.environment.set(\"BeneficiaryCurrencyDate\", jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:BeneficiaryCurrencyDate\"]);\r",
									"\r",
									" var paymentDate=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:PaymentDate\"];\r",
									"\r",
									"console.log(\"paymentDateis\", paymentDate);\r",
									"//CRO\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:IdentifyPaymentCro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"//payment staus\r",
									"var paymentstatus=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:StatusPayment\"];\r",
									"console.log(\"CroID is\", paymentstatus);\r",
									"\r",
									"//conditioncode\r",
									"var payment_conditioncode=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ConditionCode\"];\r",
									"console.log(\"CroID is\", payment_conditioncode);\r",
									"\r",
									"//commissionamount\r",
									"var payment_commission=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:AmountCommission\"];\r",
									"console.log(\"paymentcommission is\", payment_commission);\r",
									"\r",
									"//contabilie number\r",
									"var contabilie_number=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ContabileNumber\"];\r",
									"console.log(\"payment contabilie_number is\", contabilie_number);\r",
									"\r",
									"//Testcase_validations:\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment date     ----->  \"+paymentDate]     =paymentDate;\r",
									"\r",
									"tests[\"Bonifici fund transfer CRO is ----->\"+Cro]=Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment status -->\"+paymentstatus]  = paymentstatus === \"ESAURITO\";\r",
									"\r",
									"\r",
									"tests[\"Bonifici fund transfer commission conditioncode ----->\"+payment_conditioncode]=payment_conditioncode;\r",
									"\r",
									"tests[\"Bonifici fund transfer commission amount ----->\"+payment_commission]=payment_commission;\r",
									"\r",
									"tests[\"Bonifici fund transfer contabileumber ----->\"+contabilie_number]=contabilie_number;\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro>{{TC1_CRO}}</fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC2_validate_insertion_From_date_NULL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record insertiondatefromdate =NULL and result is\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record insertiondatefromdate =NULL and motivation message is \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"Search record insertiondatefromdate =NULL and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom>NULL</fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC3_validate_insertion_To_date_Null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record insertiondateTodate =NULL and result is\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record insertiondateTodate =NULL and motivation message is \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"Search record insertiondateTodate =NULL and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo>NULL</fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC4_Validate_insertiondate_INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record insertiondate is INVALID\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record insertiondate is INVALID \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"search record insertiondate is INVALID  and result is ----->\"+datenull]=datenull===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom>01/01/1991</fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC5_validate_insertion_From&TO_date_VALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" var paymentDate=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:PaymentDate\"];\r",
									"\r",
									"console.log(\"paymentDateis\", paymentDate);\r",
									"//CRO\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:IdentifyPaymentCro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"//payment staus\r",
									"var paymentstatus=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:StatusPayment\"];\r",
									"console.log(\"CroID is\", paymentstatus);\r",
									"\r",
									"//conditioncode\r",
									"var payment_conditioncode=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ConditionCode\"];\r",
									"console.log(\"CroID is\", payment_conditioncode);\r",
									"\r",
									"//commissionamount\r",
									"var payment_commission=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:AmountCommission\"];\r",
									"console.log(\"paymentcommission is\", payment_commission);\r",
									"\r",
									"//contabilie number\r",
									"var contabilie_number=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ContabileNumber\"];\r",
									"console.log(\"payment contabilie_number is\", contabilie_number);\r",
									"\r",
									"//Testcase_validations:\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment date     ----->  \"+paymentDate]     =paymentDate;\r",
									"\r",
									"tests[\"Bonifici fund transfer CRO is ----->\"+Cro]=Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment status -->\"+paymentstatus]  = paymentstatus === \"ESAURITO\";\r",
									"\r",
									"\r",
									"tests[\"Bonifici fund transfer commission conditioncode ----->\"+payment_conditioncode]=payment_conditioncode;\r",
									"\r",
									"tests[\"Bonifici fund transfer commission amount ----->\"+payment_commission]=payment_commission;\r",
									"\r",
									"tests[\"Bonifici fund transfer contabileumber ----->\"+contabilie_number]=contabilie_number;\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId>{{Accountid}}</fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId>{{paymentid}}</fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom>{{InsertionDatePaymentDate}}</fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo>{{InsertionDatePaymentDate}}</fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC6_BeneficiaryValutaDateFrom_NULL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record insertiondate is INVALID\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record BeneficiaryvalutaDatefrom is NULL \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"search record BeneficiaryvalutaDatefrom is NULL  and result is ----->\"+datenull]=datenull===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom>NULL</fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC7_BeneficiaryValutaDateFrom_INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record BeneficiaryvalutaDatefrom is INVALID\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record BeneficiaryvalutaDatefrom is INVALID \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"search record BeneficiaryvalutaDatefrom is INVALID  and result is ----->\"+datenull]=datenull===\"ERRORE\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo>01/01/1900</fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC8_BeneficiaryValutaDateFrom&TO_VALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" var paymentDate=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:PaymentDate\"];\r",
									"\r",
									"console.log(\"paymentDateis\", paymentDate);\r",
									"//CRO\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:IdentifyPaymentCro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"//payment staus\r",
									"var paymentstatus=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:StatusPayment\"];\r",
									"console.log(\"CroID is\", paymentstatus);\r",
									"\r",
									"//conditioncode\r",
									"var payment_conditioncode=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ConditionCode\"];\r",
									"console.log(\"CroID is\", payment_conditioncode);\r",
									"\r",
									"//commissionamount\r",
									"var payment_commission=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:AmountCommission\"];\r",
									"console.log(\"paymentcommission is\", payment_commission);\r",
									"\r",
									"//contabilie number\r",
									"var contabilie_number=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ContabileNumber\"];\r",
									"console.log(\"payment contabilie_number is\", contabilie_number);\r",
									"\r",
									"//Testcase_validations:\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment date     ----->  \"+paymentDate]     =paymentDate;\r",
									"\r",
									"tests[\"Bonifici fund transfer CRO is ----->\"+Cro]=Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment status -->\"+paymentstatus]  = paymentstatus === \"ESAURITO\";\r",
									"\r",
									"\r",
									"tests[\"Bonifici fund transfer commission conditioncode ----->\"+payment_conditioncode]=payment_conditioncode;\r",
									"\r",
									"tests[\"Bonifici fund transfer commission amount ----->\"+payment_commission]=payment_commission;\r",
									"\r",
									"tests[\"Bonifici fund transfer contabileumber ----->\"+contabilie_number]=contabilie_number;\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId>{{paymentid}}</fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom>{{BeneficiaryCurrencyDate}}</fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo>{{BeneficiaryCurrencyDate}}</fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC9_BeneficiaryValutaDateTO_NULL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record BeneficiaryvalutaDateTo is INVALID\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record BeneficiaryvalutaDateTo is NULL \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"search record BeneficiaryvalutaDateTo is NULL  and result is ----->\"+datenull]=datenull===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo>NULL</fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC10_ExecutionDateFrom_NULL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record ExecutionDatefrom is INVALID\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record ExecutionDatefrom is NULL \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"search record ExecutionDatefrom is NULL  and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom>NULL</fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC11_ExecutionDateFrom_INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record ExecutionDatefrom is INVALID\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record ExecutionDatefrom is NULL \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"search record ExecutionDatefrom is NULL  and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom>01/01/1900</fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC12_ExecutionDateFrom&To_VALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" var ExecutionDate=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:ExecutionDate\"];\r",
									"\r",
									"console.log(\"paymentDateis\", ExecutionDate);\r",
									"//CRO\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:IdentifyPaymentCro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"//payment staus\r",
									"var paymentstatus=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:StatusPayment\"];\r",
									"console.log(\"CroID is\", paymentstatus);\r",
									"\r",
									"//conditioncode\r",
									"var payment_conditioncode=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ConditionCode\"];\r",
									"console.log(\"CroID is\", payment_conditioncode);\r",
									"\r",
									"//commissionamount\r",
									"var payment_commission=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:AmountCommission\"];\r",
									"console.log(\"paymentcommission is\", payment_commission);\r",
									"\r",
									"//contabilie number\r",
									"var contabilie_number=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ContabileNumber\"];\r",
									"console.log(\"payment contabilie_number is\", contabilie_number);\r",
									"\r",
									"//Testcase_validations:\r",
									"\r",
									"tests[\"Bonificio Fund Transfer ExecutionDate date  is   ----->  \"+ExecutionDate]     =ExecutionDate;\r",
									"\r",
									"tests[\"Bonifici fund transfer CRO is ----->\"+Cro]=Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment status -->\"+paymentstatus]  = paymentstatus === \"ESAURITO\";\r",
									"\r",
									"\r",
									"tests[\"Bonifici fund transfer commission conditioncode ----->\"+payment_conditioncode]=payment_conditioncode;\r",
									"\r",
									"tests[\"Bonifici fund transfer commission amount ----->\"+payment_commission]=payment_commission;\r",
									"\r",
									"tests[\"Bonifici fund transfer contabileumber ----->\"+contabilie_number]=contabilie_number;\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId>{{paymentid}}</fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom>{{Executiondate}}</fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo>{{Executiondate}}</fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC13_ExecutionDateTo_NULL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record ExecutionDateTO is INVALID\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record ExecutionDateTO is NULL \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"search record ExecutionDateTO is NULL  and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo>NULL</fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC14_ExecutionDateTo_INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record ExecutionDateTO is INVALID\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record ExecutionDateTO is INVALID \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"search record ExecutionDateTO is INVALID  and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo>01/01/1900</fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC15_Currencyamount_from&To_VALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" var paymentDate=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:PaymentDate\"];\r",
									"\r",
									"console.log(\"paymentDateis\", paymentDate);\r",
									"//CRO\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:IdentifyPaymentCro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"//payment staus\r",
									"var paymentstatus=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:StatusPayment\"];\r",
									"console.log(\"CroID is\", paymentstatus);\r",
									"\r",
									"//Currencyname\r",
									"var currencyname=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:IsoCurrencyAmount\"];\r",
									"\r",
									"//amount\r",
									"var Trans_amount=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:Amount\"];\r",
									"\r",
									"//conditioncode\r",
									"var payment_conditioncode=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ConditionCode\"];\r",
									"console.log(\"CroID is\", payment_conditioncode);\r",
									"\r",
									"//commissionamount\r",
									"var payment_commission=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:AmountCommission\"];\r",
									"console.log(\"paymentcommission is\", payment_commission);\r",
									"\r",
									"//contabilie number\r",
									"var contabilie_number=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ContabileNumber\"];\r",
									"console.log(\"payment contabilie_number is\", contabilie_number);\r",
									"\r",
									"//Testcase_validations:\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment date     ----->  \"+paymentDate]     =paymentDate;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer currencyname is     ----->  \"+currencyname]     =currencyname ===\"EUR\";\r",
									"\r",
									"tests[\"Bonificio Fund Transfer Transactionamount is     ----->  \"+Trans_amount]     =Trans_amount ===\"10\";\r",
									"\r",
									"tests[\"Bonifici fund transfer CRO is ----->\"+Cro]=Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment status -->\"+paymentstatus]  = paymentstatus === \"ESAURITO\";\r",
									"\r",
									"\r",
									"tests[\"Bonifici fund transfer commission conditioncode ----->\"+payment_conditioncode]=payment_conditioncode;\r",
									"\r",
									"tests[\"Bonifici fund transfer commission amount ----->\"+payment_commission]=payment_commission;\r",
									"\r",
									"tests[\"Bonifici fund transfer contabileumber ----->\"+contabilie_number]=contabilie_number;\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId>{{Accountid}}</fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId>{{paymentid}}</fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom>NULL</fun:AmountFrom>\r\n            <fun:AmountTo>NULL</fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC16_Currencyamount_from&To_NULL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record currencyamount =NULL and result is\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record currencyamount  =NULL and motivation message is \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"Search record currencyamount  =NULL and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom>NULL</fun:AmountFrom>\r\n            <fun:AmountTo>NULL</fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC17_Currencyamount_from&To_INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" //insertiondate is null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record insertiondatefromdate =NULL and result is\", datenull);\r",
									"\r",
									"//insertiondate is null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record insertiondatefromdate =NULL and motivation message is \", motivation);\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"Search record while currencyamount=INVALID and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom>-1</fun:AmountFrom>\r\n            <fun:AmountTo>00</fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC18_Currencyamount_from&To_MISMATCH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" // null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record insertiondatefromdate =NULL and result is\", datenull);\r",
									"\r",
									"// null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"Search record while currencyamount=Mismatch and result is \", motivation);\r",
									"\r",
									"\r",
									"//motivationcode\r",
									"var motivationcode= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:MotivationCode\"];\r",
									"console.log(\"search record while currencyamount=Mismatch and motivation message is \", motivationcode);\r",
									"\r",
									"\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"Search record while currencyamount=Mismatch and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:AmountFrom>2</fun:AmountFrom>\r\n            <fun:AmountTo>1</fun:AmountTo>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC19_Currencyname_VALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" var paymentDate=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:PaymentDate\"];\r",
									"\r",
									"console.log(\"paymentDateis\", paymentDate);\r",
									"//CRO\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:IdentifyPaymentCro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"//payment staus\r",
									"var paymentstatus=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:StatusPayment\"];\r",
									"console.log(\"CroID is\", paymentstatus);\r",
									"\r",
									"//Currencyname\r",
									"var currencyname=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:IsoCurrencyAmount\"];\r",
									"\r",
									"//amount\r",
									"var Trans_amount=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:PaymentDetails\"][\"tns:Amount\"];\r",
									"\r",
									"//conditioncode\r",
									"var payment_conditioncode=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ConditionCode\"];\r",
									"console.log(\"CroID is\", payment_conditioncode);\r",
									"\r",
									"//commissionamount\r",
									"var payment_commission=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:AmountCommission\"];\r",
									"console.log(\"paymentcommission is\", payment_commission);\r",
									"\r",
									"//contabilie number\r",
									"var contabilie_number=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:ListOfPayments\"][\"tns:PaymentLightView\"][\"tns:CommissionDetails\"][\"tns:ContabileNumber\"];\r",
									"console.log(\"payment contabilie_number is\", contabilie_number);\r",
									"\r",
									"//Testcase_validations:\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment date     ----->  \"+paymentDate]     =paymentDate;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer currencyname is     ----->  \"+currencyname]     =currencyname ===\"EUR\";\r",
									"\r",
									"tests[\"Bonificio Fund Transfer Transactionamount is     ----->  \"+Trans_amount]     =Trans_amount ===\"10\";\r",
									"\r",
									"tests[\"Bonifici fund transfer CRO is ----->\"+Cro]=Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment status -->\"+paymentstatus]  = paymentstatus === \"ESAURITO\";\r",
									"\r",
									"\r",
									"tests[\"Bonifici fund transfer commission conditioncode ----->\"+payment_conditioncode]=payment_conditioncode;\r",
									"\r",
									"tests[\"Bonifici fund transfer commission amount ----->\"+payment_commission]=payment_commission;\r",
									"\r",
									"tests[\"Bonifici fund transfer contabileumber ----->\"+contabilie_number]=contabilie_number;\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId>{{Accountid}}</fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId>{{paymentid}}</fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency>EUR</fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC20_Currencyname_INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" // null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"Search record currencyname =INVALID and result is\", datenull);\r",
									"\r",
									"// null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"Search record currencyname =INVALID and motivation message is \", motivation);\r",
									"\r",
									"//motivationcode\r",
									"var motivationcode= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:MotivationCode\"];\r",
									"console.log(\"Search record currencyname =INVALID and motivation code is \", motivationcode);\r",
									"\r",
									"\r",
									"//Test case validations\r",
									"\r",
									"tests[\"Search record currencyname =INVALID and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Currency>USDY</fun:Currency>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC21_Currencyname_NULL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" // null result\r",
									" var datenull=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"console.log(\"search record currencyname =NULL and result is\", datenull);\r",
									"\r",
									"// null motivation\r",
									"var motivation = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"console.log(\"search record currencyname =NULL and motivation message is \", motivation);\r",
									"\r",
									"//motivationcode\r",
									"var motivationcode= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:MotivationCode\"];\r",
									"console.log(\"search record currencyname =NULL and motivation message is \", motivationcode);\r",
									"//Test case validations\r",
									"\r",
									"tests[\"Search record currencyname =NULL and result is ----->\"+datenull]=datenull ===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Currency>NULL</fun:Currency>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC22_Verify the response using Account_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"var jsonData = xml2Json(responseBody);\r",
									"//console.log(jsonData);\r",
									"\r",
									"var paymentDetails = []; // create empty array to store details\r",
									"var paymentStatus= [];\r",
									"var paymentamount = [];\r",
									"var PaymentCRO = [];\r",
									"\r",
									"\r",
									"//console.log(jsonData['soapenv:Envelope']['S:Body']['tns:SearchFundTransferResponse']['tns:ListOfPayments']['tns:PaymentLightView'][0]['tns:PaymentDetails']);\r",
									"\r",
									"var pt = jsonData['soapenv:Envelope']['S:Body']['tns:SearchFundTransferResponse']['tns:ListOfPayments']['tns:PaymentLightView'];\r",
									"\r",
									"// loop through the collection\r",
									"for(var i = 0; i < pt.length; i++) {\r",
									"var noOfpayment = pt.length;\r",
									"pm.environment.set(\"noOfpayment\", noOfpayment);\r",
									"paymentStatus.push(pt[i]['tns:PaymentDetails']['tns:StatusPayment'])\r",
									"paymentamount.push(pt[i]['tns:PaymentDetails']['tns:Amount'])\r",
									"PaymentCRO.push(pt[i]['tns:PaymentDetails']['tns:IdentifyPaymentCro'])\r",
									"paymentDetails = _.pick(pt[i]['tns:PaymentDetails'], [['tns:PaymentDate'],['tns:PaymentId'],['tns:IdentifyPaymentCro'],['tns:Amount']]);\r",
									"console.log(paymentDetails);\r",
									"}\r",
									"\r",
									"//pm.environment.set(\"paymentDetails\", paymentDetails);\r",
									"//pm.environment.set(\"paymentStatus\", paymentStatus);\r",
									"//pm.environment.set(\"paymentamount\", paymentamount);\r",
									"\r",
									"\r",
									"tests[\"payment cro details --->\"+PaymentCRO]=PaymentCRO;\r",
									"tests[\"paymentStatus is  ----- >\"+paymentStatus]=paymentStatus;\r",
									"tests[\"Paymentamount is  ----- >\"+paymentamount]=paymentamount;\r",
									"\r",
									"pm.test('No of payment count is: '+ pt.length, function () {\r",
									"pm.expect(noOfpayment).to.be.equal(5);\r",
									"})\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId>{{Accountid}}</fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC23_validate_Account and IBAN=NULL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" var Result=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"\r",
									" var Motivation=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"\r",
									" var MotivationCode=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:MotivationCode\"];\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment status -->\"+Result]  = Result ===\"ERRORE\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId>NULL</fun:AccountId>\r\n            <fun:IbanOrAccount>NULL</fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC24_validate_if from date is greaterthan todate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" var Result=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"\r",
									" var Motivation=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"\r",
									" var MotivationCode=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:MotivationCode\"];\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment status -->\"+Result]  = Result ===\"ERRORE\";\r",
									"\r",
									"\r",
									"tests[\"Bonifici fund transfer motivation ----->\"+Motivation]=Motivation;\r",
									"\r",
									"tests[\"Bonifici fund transfer motivationcode ----->\"+MotivationCode]=MotivationCode ===\"SZBO-0039\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n         <fun:ConditionalField>\r\n            <fun:AccountId>{{Accountid}}</fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro></fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom>01/07/2017</fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo>01/05/2016</fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC25_When query returns Zero record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									" \r",
									" var Result=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Result\"];\r",
									"\r",
									"\r",
									" var Motivation=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:Motivation\"];\r",
									"\r",
									" var MotivationCode=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:SearchFundTransferResponse\"][\"tns:MotivationCode\"];\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer payment status -->\"+Result]  = Result ===\"ERRORE\";\r",
									"\r",
									"\r",
									"tests[\"Bonifici fund transfer motivation ----->\"+Motivation]=Motivation ===\"Nessun record trovato\";\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:SearchFundTransferRequest>\r\n       <fun:ConditionalField>\r\n            <fun:AccountId></fun:AccountId>\r\n            <fun:IbanOrAccount></fun:IbanOrAccount>\r\n            <fun:PaymentId></fun:PaymentId>\r\n            <fun:Cro>24554849106</fun:Cro>\r\n         </fun:ConditionalField>\r\n         <fun:OptionalField>\r\n            <fun:IbUserCode></fun:IbUserCode>\r\n            <fun:Reference></fun:Reference>\r\n            <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n            <fun:InsertionDateTo></fun:InsertionDateTo>\r\n            <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n            <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n            <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n            <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n            <fun:Direction></fun:Direction>\r\n            <fun:AmountFrom></fun:AmountFrom>\r\n            <fun:AmountTo></fun:AmountTo>\r\n            <fun:Currency></fun:Currency>\r\n            <fun:SubSystemCaller></fun:SubSystemCaller>\r\n            <fun:Channel></fun:Channel>\r\n            <fun:Offset>1</fun:Offset>\r\n            <fun:Count>5</fun:Count>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:SearchFundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope> ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC26_Validate list of search records count and payment details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"var jsonData = xml2Json(responseBody);\r",
									"//console.log(jsonData);\r",
									"\r",
									"var paymentDetails = []; // create empty array to store details\r",
									"var paymentStatus= [];\r",
									"var paymentamount = [];\r",
									"var PaymentCRO = [];\r",
									"\r",
									"\r",
									"//console.log(jsonData['soapenv:Envelope']['S:Body']['tns:SearchFundTransferResponse']['tns:ListOfPayments']['tns:PaymentLightView'][0]['tns:PaymentDetails']);\r",
									"\r",
									"var pt = jsonData['soapenv:Envelope']['S:Body']['tns:SearchFundTransferResponse']['tns:ListOfPayments']['tns:PaymentLightView'];\r",
									"\r",
									"// loop through the collection\r",
									"for(var i = 0; i < pt.length; i++) {\r",
									"var noOfpayment = pt.length;\r",
									"pm.environment.set(\"noOfpayment\", noOfpayment);\r",
									"paymentStatus.push(pt[i]['tns:PaymentDetails']['tns:StatusPayment'])\r",
									"paymentamount.push(pt[i]['tns:PaymentDetails']['tns:Amount'])\r",
									"PaymentCRO.push(pt[i]['tns:PaymentDetails']['tns:IdentifyPaymentCro'])\r",
									"paymentDetails = _.pick(pt[i]['tns:PaymentDetails'], [['tns:PaymentDate'],['tns:PaymentId'],['tns:IdentifyPaymentCro'],['tns:Amount']]);\r",
									"console.log(paymentDetails);\r",
									"}\r",
									"\r",
									"//pm.environment.set(\"paymentDetails\", paymentDetails);\r",
									"//pm.environment.set(\"paymentStatus\", paymentStatus);\r",
									"//pm.environment.set(\"paymentamount\", paymentamount);\r",
									"\r",
									"\r",
									"tests[\"payment cro details --->\"+PaymentCRO]=PaymentCRO;\r",
									"tests[\"paymentStatus is  ----- >\"+paymentStatus]=paymentStatus;\r",
									"tests[\"Paymentamount is  ----- >\"+paymentamount]=paymentamount;\r",
									"\r",
									"\r",
									"pm.test('No of payment count is: '+ pt.length, function () {\r",
									"pm.expect(noOfpayment).to.be.equal(5);\r",
									"//or\r",
									"//pm.expect(pt.length).to.be.equal(5);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <fun:SearchFundTransferRequest>\r\n            <fun:ConditionalField>\r\n                <fun:AccountId>{{Accountid}}</fun:AccountId>\r\n                <fun:IbanOrAccount></fun:IbanOrAccount>\r\n                <fun:PaymentId></fun:PaymentId>\r\n                <fun:Cro></fun:Cro>\r\n            </fun:ConditionalField>\r\n            <fun:OptionalField>\r\n                <fun:IbUserCode></fun:IbUserCode>\r\n                <fun:Reference></fun:Reference>\r\n                <fun:InsertionDateFrom></fun:InsertionDateFrom>\r\n                <fun:InsertionDateTo></fun:InsertionDateTo>\r\n                <fun:BeneficiaryValutaDateFrom></fun:BeneficiaryValutaDateFrom>\r\n                <fun:BeneficiaryValutaDateTo></fun:BeneficiaryValutaDateTo>\r\n                <fun:ExecutionDateFrom></fun:ExecutionDateFrom>\r\n                <fun:ExecutionDateTo></fun:ExecutionDateTo>\r\n                <fun:Direction></fun:Direction>\r\n                <fun:AmountFrom></fun:AmountFrom>\r\n                <fun:AmountTo></fun:AmountTo>\r\n                <fun:Currency></fun:Currency>\r\n                <fun:SubSystemCaller></fun:SubSystemCaller>\r\n                <fun:Channel></fun:Channel>\r\n                <fun:Offset>1</fun:Offset>\r\n                <fun:Count>5</fun:Count>\r\n            </fun:OptionalField>\r\n            <fun:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token></bas:Auth-Token>\r\n            </fun:MessageContext>\r\n        </fun:SearchFundTransferRequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SISPAABI_2400",
			"item": [
				{
					"name": "BSI -Verify the Sconfino error (BPAG-0521) when user transact amount (credit) which is greater than actual amount(debit account) in \"V\" mode|current date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund ErrorCode     ----->  \"+ErrorCode]     =ErrorCode=== \"BPAG-0521\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Fondi non sufficienti\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT91R0326813500052149527430</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>ITALMARK S.R.L.</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>100015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Azhagu Testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BSI -Verify when user transact amount (credit) which is greater than actual amount(debit account) in \"E\" mode|Future date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer     ----->  \"+Cro]     =Cro;\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"PRENOTATO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT91R0326813500052149527430</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>ITALMARK S.R.L.</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>100015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Azhagu Testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BSI -Verify when user transact amount (credit) which is greater than actual amount(debit account) in \"V\" mode|Future date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var Result =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer     ----->  \"+Cro]     =Cro;\r",
									"tests[\"Bonifici result ---->\" +Result]=Result===\"SUCCESS\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT91R0326813500052149527430</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>ITALMARK S.R.L.</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>100015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Azhagu Testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BSI -Verify when user transact amount (credit) which is greater than actual amount(debit account) in \"E\" mode|current date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund ErrorCode     ----->  \"+ErrorCode]     =ErrorCode=== \"BPAG-0521\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Fondi non sufficienti\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT91R0326813500052149527430</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>ITALMARK S.R.L.</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>100015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Azhagu Testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAI -Verify the Sconfino error (BPAG-0521) when user transact amount (credit) which is greater than actual amount(debit account) in \"V\" mode|currentdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund ErrorCode     ----->  \"+ErrorCode]     =ErrorCode=== \"BPAG-0521\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Fondi non sufficienti\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT79R0538711238000042713000</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>ITALMARK S.R.L.</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>10000015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>CASHIN IT GORLE CASH 2021-04-20</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAI -Verify when user transact amount (credit) which is greater than actual amount(debit account) in \"E\" mode|current date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund ErrorCode     ----->  \"+ErrorCode]     =ErrorCode=== \"BPAG-0521\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Fondi non sufficienti\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT79R0538711238000042713000</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>ITALMARK S.R.L.</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>100015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>CASHIN IT GORLE CASH 2021-04-20</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAI -Verify when user transact amount (credit) which is greater than actual amount(debit account) in \"E\" mode|Future date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer     ----->  \"+Cro]     =Cro;\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"PRENOTATO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>I_B</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT79R0538711238000042713000</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>ITALMARK S.R.L.</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>100015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>CASHIN IT GORLE CASH 2021-04-20</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAI -Verify when user transact amount (credit) which is greater than actual amount(debit account) in \"V\" mode|Future date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer     ----->  \"+Cro]     =Cro;\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>IT79R0538711238000042713000</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>ITALMARK S.R.L.</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence></fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>100015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Azhagu Testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAIE -Verify the Sconfino error (BPAG-0521) when user transact amount (credit) which is greater than actual amount(debit account) in \"V\" mode|currentdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund ErrorCode     ----->  \"+ErrorCode]     =ErrorCode=== \"BPAG-0521\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Fondi non sufficienti\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>FR7630076021471319360020074</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1000015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Azhagu Testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAIE -Verify when user transact amount (credit) which is greater than actual amount(debit account) in \"V\" mode|Future date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer     ----->  \"+Cro]     =Cro;\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>FR7630076021471319360020074</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1000015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Azhagu Testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAIE -Verify when user transact amount (credit) which is greater than actual amount(debit account) in \"E\" mode|Current date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund ErrorCode     ----->  \"+ErrorCode]     =ErrorCode=== \"BPAG-0521\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"Fondi non sufficienti\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>FR7630076021471319360020074</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1000015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Azhagu Testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment></fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAIE -Verify when user transact amount (credit) which is greater than actual amount(debit account) in \"E\" mode|Future date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"var ErrorCode =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:ErrorCode'];\r",
									"\r",
									"// To verify the contabilie number\r",
									"\r",
									"\r",
									"\r",
									"tests[\"Bonificio Fund Transfer     ----->  \"+Cro]     =Cro;\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"PRENOTATO_T2S\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <fun:FundTransferRequest>\r\n         <fun:MandatoryField>\r\n            <fun:HeaderField>\r\n               <fun:Channel>0017</fun:Channel>\r\n               <fun:Subsystem>SME</fun:Subsystem>\r\n               <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n            </fun:HeaderField>\r\n            <fun:OrderField>\r\n               <fun:ConditionalSubject>\r\n                  <fun:IBCode>01207165</fun:IBCode>\r\n                  <fun:SubjectId></fun:SubjectId>\r\n                  <fun:SubjectExecutorId></fun:SubjectExecutorId>\r\n                  <fun:IsCorrespondent></fun:IsCorrespondent>\r\n               </fun:ConditionalSubject>\r\n               <fun:ConditionalOrderAccount>\r\n                  <fun:AccountOrderId></fun:AccountOrderId>\r\n                  <fun:AccountNumber>52525989580</fun:AccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalOrderAccount>\r\n               <fun:ConditionalDebitAccount>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccount>\r\n               <fun:ConditionalDebitAccountCommission>\r\n                  <fun:DebitAccountId></fun:DebitAccountId>\r\n                  <fun:DebitAccountNumber></fun:DebitAccountNumber>\r\n                  <fun:Iban></fun:Iban>\r\n               </fun:ConditionalDebitAccountCommission>\r\n            </fun:OrderField>\r\n            <fun:BeneficiaryField>\r\n               <fun:ConditionalBeneficiaryRules>\r\n                  <fun:BeneficiaryAccountId></fun:BeneficiaryAccountId>\r\n                  <fun:AccountOrIbanBeneficiary>FR7630076021471319360020074</fun:AccountOrIbanBeneficiary>\r\n                  <fun:BicBeneficiary></fun:BicBeneficiary>\r\n                  <fun:NationalBankBeneficiaryId></fun:NationalBankBeneficiaryId>\r\n                  <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                  <fun:MandatoryForeignBeneficiaryField>\r\n                     <fun:BeneficiaryAddress></fun:BeneficiaryAddress>\r\n                     <fun:BeneficiaryCity></fun:BeneficiaryCity>\r\n                  </fun:MandatoryForeignBeneficiaryField>\r\n                  <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n               </fun:ConditionalBeneficiaryRules>\r\n            </fun:BeneficiaryField>\r\n            <fun:AmountDetails>\r\n               <fun:Amount>1000015.0</fun:Amount>\r\n               <fun:Currency>EUR</fun:Currency>\r\n            </fun:AmountDetails>\r\n            <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n            <fun:Reference>Azhagu Testing</fun:Reference>\r\n         </fun:MandatoryField>\r\n         <fun:OptionalField>\r\n            <fun:ExecutionDatePayment>{{BookingPayment}}</fun:ExecutionDatePayment>\r\n            <fun:UserTagAccountMovementId></fun:UserTagAccountMovementId>\r\n            <fun:Uri></fun:Uri>\r\n            <fun:IsUrgent>false</fun:IsUrgent>\r\n            <fun:IsInstant>false</fun:IsInstant>\r\n            <fun:Cro></fun:Cro>\r\n            <fun:OriginCro></fun:OriginCro>\r\n            <fun:Cioc></fun:Cioc>\r\n            <fun:TicketCustomerDesk></fun:TicketCustomerDesk>\r\n            <fun:TaxAdvantageView>\r\n\t\t<fun:BeneficiaryType></fun:BeneficiaryType>\r\n\t\t<fun:isBuildingCase></fun:isBuildingCase>\r\n               <fun:AdministratorCF></fun:AdministratorCF>\r\n               <fun:BeneficiaryCFPIVA></fun:BeneficiaryCFPIVA>\r\n               <fun:FirstOrderCFPIVA></fun:FirstOrderCFPIVA>\r\n               <fun:SecondOrderCF></fun:SecondOrderCF>\r\n               <fun:ThirdOrderCF></fun:ThirdOrderCF>\r\n               <fun:FourthOrderCF></fun:FourthOrderCF>\r\n               <fun:FifthOrderCF></fun:FifthOrderCF>\r\n               <fun:SixthOrderCF></fun:SixthOrderCF>\r\n               <fun:SeventhOrderCF></fun:SeventhOrderCF>\r\n               <fun:EighthOrderCF></fun:EighthOrderCF>\r\n               <fun:NinthOrderCF></fun:NinthOrderCF>\r\n               <fun:TenthOrderCF></fun:TenthOrderCF>\r\n               <fun:ConditionalTaxAdvantage>\r\n                  <fun:TaxAdvantageId></fun:TaxAdvantageId>\r\n                  <fun:TaxAdvantage></fun:TaxAdvantage>\r\n               </fun:ConditionalTaxAdvantage>\r\n            </fun:TaxAdvantageView>\r\n            <fun:DynamicField></fun:DynamicField>\r\n         </fun:OptionalField>\r\n         <fun:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </fun:MessageContext>\r\n      </fun:FundTransferRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Addnote&commission details",
			"item": [
				{
					"name": "BAIE- Verify user able to provide additional notes in the xml also able to do payment(Execution)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"// To verify the contabilie number\r",
									"var contabilenumber = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AccountingOperation\"][\"tns:ContabileNumber\"]\r",
									"console.log(\"contabilenumber\", contabilenumber);\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fund contabilenumber     ----->  \"+contabilenumber] =contabilenumber;\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <fun:FundTransferRequest>\r\n            <fun:MandatoryField>\r\n                <fun:HeaderField>\r\n                    <fun:Channel>0017</fun:Channel>\r\n                    <fun:Subsystem>I_B</fun:Subsystem>\r\n                    <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n                </fun:HeaderField>\r\n                <fun:OrderField>\r\n                    <fun:ConditionalSubject>\r\n                        <fun:IBCode />\r\n                        <fun:SubjectId>8666796</fun:SubjectId>\r\n                        <fun:SubjectExecutorId>8666796</fun:SubjectExecutorId>\r\n                        <fun:IsCorrespondent />\r\n                    </fun:ConditionalSubject>\r\n                    <fun:ConditionalOrderAccount>\r\n                        <fun:AccountOrderId />\r\n                        <fun:AccountNumber>78965081600</fun:AccountNumber>\r\n                        <fun:Iban />\r\n                    </fun:ConditionalOrderAccount>\r\n                    <fun:ConditionalDebitAccount>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccount>\r\n                    <fun:ConditionalDebitAccountCommission>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccountCommission>\r\n                </fun:OrderField>\r\n                <fun:BeneficiaryField>\r\n                    <fun:ConditionalBeneficiaryRules>\r\n                        <fun:BeneficiaryAccountId/>\r\n                        <fun:AccountOrIbanBeneficiary>FR7630076021471319360020074</fun:AccountOrIbanBeneficiary>\r\n                        <fun:BicBeneficiary/>\r\n                        <fun:NationalBankBeneficiaryId/>\r\n                        <fun:BeneficiaryName>RAVE SAS DI RAVASIO LUCA C</fun:BeneficiaryName>\r\n                        <fun:MandatoryForeignBeneficiaryField>\r\n                            <fun:BeneficiaryAddress/>\r\n                            <fun:BeneficiaryCity/>\r\n                        </fun:MandatoryForeignBeneficiaryField>\r\n                        <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n                    </fun:ConditionalBeneficiaryRules>\r\n                </fun:BeneficiaryField>\r\n                <fun:AmountDetails>\r\n                    <fun:Amount>1.01</fun:Amount>\r\n                    <fun:Currency>EUR</fun:Currency>\r\n                </fun:AmountDetails>\r\n                <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n                <fun:Reference>TEST INVIO INTESA SANPAOLO 20180307</fun:Reference>\r\n            </fun:MandatoryField>\r\n            <fun:OptionalField>\r\n                <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n                <fun:UserTagAccountMovementId/>\r\n                <fun:Uri/>\r\n                <fun:IsUrgent/>\r\n                <fun:IsInstant/>\r\n                <fun:Cro/>\r\n                <fun:OriginCro/>\r\n                <fun:Cioc></fun:Cioc>\r\n                <fun:TicketCustomerDesk/>\r\n                <fun:CausaliAbi></fun:CausaliAbi>\r\n                <fun:TaxAdvantageView>\r\n                    <fun:AdministratorCF/>\r\n                    <fun:BeneficiaryCFPIVA/>\r\n                    <fun:FirstOrderCFPIVA/>\r\n                    <fun:SecondOrderCF/>\r\n                    <fun:ThirdOrderCF/>\r\n                    <fun:FourthOrderCF/>\r\n                    <fun:FifthOrderCF/>\r\n                    <fun:SixthOrderCF/>\r\n                    <fun:SeventhOrderCF/>\r\n                    <fun:EighthOrderCF/>\r\n                    <fun:NinthOrderCF/>\r\n                    <fun:TenthOrderCF/>\r\n                    <fun:ConditionalTaxAdvantage>\r\n                        <fun:TaxAdvantageId/>\r\n                        <fun:TaxAdvantage/>\r\n                    </fun:ConditionalTaxAdvantage>\r\n                </fun:TaxAdvantageView>\r\n                <fun:DynamicField/>\r\n                <fun:DeviceId></fun:DeviceId>\r\n                <fun:AccessToken></fun:AccessToken>\r\n                <fun:AdditionalNotes> hello </fun:AdditionalNotes>\r\n            </fun:OptionalField>\r\n            <fun:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03395</bas:ABI>\r\n            </fun:MessageContext>\r\n        </fun:FundTransferRequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAIE-Verify user able to provide additional notes in the xml also able to do payment(Validation)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"// To verify the contabilie number\r",
									"var contabilenumber = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AccountingOperation\"][\"tns:ContabileNumber\"]\r",
									"console.log(\"contabilenumber\", contabilenumber);\r",
									"\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <fun:FundTransferRequest>\r\n            <fun:MandatoryField>\r\n                <fun:HeaderField>\r\n                    <fun:Channel>0017</fun:Channel>\r\n                    <fun:Subsystem>I_B</fun:Subsystem>\r\n                    <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n                </fun:HeaderField>\r\n                <fun:OrderField>\r\n                    <fun:ConditionalSubject>\r\n                        <fun:IBCode />\r\n                        <fun:SubjectId>8666796</fun:SubjectId>\r\n                        <fun:SubjectExecutorId>8666796</fun:SubjectExecutorId>\r\n                        <fun:IsCorrespondent />\r\n                    </fun:ConditionalSubject>\r\n                    <fun:ConditionalOrderAccount>\r\n                        <fun:AccountOrderId />\r\n                        <fun:AccountNumber>78965081600</fun:AccountNumber>\r\n                        <fun:Iban />\r\n                    </fun:ConditionalOrderAccount>\r\n                    <fun:ConditionalDebitAccount>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccount>\r\n                    <fun:ConditionalDebitAccountCommission>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccountCommission>\r\n                </fun:OrderField>\r\n                <fun:BeneficiaryField>\r\n                    <fun:ConditionalBeneficiaryRules>\r\n                        <fun:BeneficiaryAccountId/>\r\n                        <fun:AccountOrIbanBeneficiary>FR7630076021471319360020074</fun:AccountOrIbanBeneficiary>\r\n                        <fun:BicBeneficiary/>\r\n                        <fun:NationalBankBeneficiaryId/>\r\n                        <fun:BeneficiaryName>RAVE SAS DI RAVASIO LUCA C</fun:BeneficiaryName>\r\n                        <fun:MandatoryForeignBeneficiaryField>\r\n                            <fun:BeneficiaryAddress/>\r\n                            <fun:BeneficiaryCity/>\r\n                        </fun:MandatoryForeignBeneficiaryField>\r\n                        <fun:IsoBeneficiaryResidence>FR</fun:IsoBeneficiaryResidence>\r\n                    </fun:ConditionalBeneficiaryRules>\r\n                </fun:BeneficiaryField>\r\n                <fun:AmountDetails>\r\n                    <fun:Amount>1.01</fun:Amount>\r\n                    <fun:Currency>EUR</fun:Currency>\r\n                </fun:AmountDetails>\r\n                <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n                <fun:Reference>TEST INVIO INTESA SANPAOLO 20180307</fun:Reference>\r\n            </fun:MandatoryField>\r\n            <fun:OptionalField>\r\n                <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n                <fun:UserTagAccountMovementId/>\r\n                <fun:Uri/>\r\n                <fun:IsUrgent/>\r\n                <fun:IsInstant/>\r\n                <fun:Cro/>\r\n                <fun:OriginCro/>\r\n                <fun:Cioc></fun:Cioc>\r\n                <fun:TicketCustomerDesk/>\r\n                <fun:CausaliAbi></fun:CausaliAbi>\r\n                <fun:TaxAdvantageView>\r\n                    <fun:AdministratorCF/>\r\n                    <fun:BeneficiaryCFPIVA/>\r\n                    <fun:FirstOrderCFPIVA/>\r\n                    <fun:SecondOrderCF/>\r\n                    <fun:ThirdOrderCF/>\r\n                    <fun:FourthOrderCF/>\r\n                    <fun:FifthOrderCF/>\r\n                    <fun:SixthOrderCF/>\r\n                    <fun:SeventhOrderCF/>\r\n                    <fun:EighthOrderCF/>\r\n                    <fun:NinthOrderCF/>\r\n                    <fun:TenthOrderCF/>\r\n                    <fun:ConditionalTaxAdvantage>\r\n                        <fun:TaxAdvantageId/>\r\n                        <fun:TaxAdvantage/>\r\n                    </fun:ConditionalTaxAdvantage>\r\n                </fun:TaxAdvantageView>\r\n                <fun:DynamicField/>\r\n                <fun:DeviceId></fun:DeviceId>\r\n                <fun:AccessToken></fun:AccessToken>\r\n                <fun:AdditionalNotes> hello </fun:AdditionalNotes>\r\n            </fun:OptionalField>\r\n            <fun:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03395</bas:ABI>\r\n            </fun:MessageContext>\r\n        </fun:FundTransferRequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAI- Verify user able to provide additional notes in the xml and able to do payment(Verification)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"// To verify the contabilie number\r",
									"var contabilenumber = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AccountingOperation\"][\"tns:ContabileNumber\"]\r",
									"console.log(\"contabilenumber\", contabilenumber);\r",
									"\r",
									"\r",
									"//tests [\"Bonificio Fund contabilenumber     ----->  \"+contabilenumber] =contabilenumber;\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"//tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESEGUITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <fun:FundTransferRequest>\r\n            <fun:MandatoryField>\r\n                <fun:HeaderField>\r\n                    <fun:Channel>0017</fun:Channel>\r\n                    <fun:Subsystem>I_B</fun:Subsystem>\r\n                    <fun:ValidationOrExecution>V</fun:ValidationOrExecution>\r\n                </fun:HeaderField>\r\n                <fun:OrderField>\r\n                    <fun:ConditionalSubject>\r\n                        <fun:IBCode />\r\n                        <fun:SubjectId>2179639</fun:SubjectId>\r\n                        <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                        <fun:IsCorrespondent />\r\n                    </fun:ConditionalSubject>\r\n                    <fun:ConditionalOrderAccount>\r\n                        <fun:AccountOrderId />\r\n                        <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                        <fun:Iban />\r\n                    </fun:ConditionalOrderAccount>\r\n                    <fun:ConditionalDebitAccount>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccount>\r\n                    <fun:ConditionalDebitAccountCommission>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccountCommission>\r\n                </fun:OrderField>\r\n                <fun:BeneficiaryField>\r\n                    <fun:ConditionalBeneficiaryRules>\r\n                        <fun:BeneficiaryAccountId/>\r\n                        <fun:AccountOrIbanBeneficiary>IT59P0326822311001641490340</fun:AccountOrIbanBeneficiary>\r\n                      <fun:BicBeneficiary>SELBIT2BXXX</fun:BicBeneficiary>\r\n                        <fun:NationalBankBeneficiaryId/>\r\n                        <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                        <fun:MandatoryForeignBeneficiaryField>\r\n                            <fun:BeneficiaryAddress/>\r\n                            <fun:BeneficiaryCity/>\r\n                        </fun:MandatoryForeignBeneficiaryField>\r\n                        <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n                    </fun:ConditionalBeneficiaryRules>\r\n                </fun:BeneficiaryField>\r\n                <fun:AmountDetails>\r\n                    <fun:Amount>1.01</fun:Amount>\r\n                    <fun:Currency>EUR</fun:Currency>\r\n                </fun:AmountDetails>\r\n                <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n                <fun:Reference>TEST INVIO INTESA SANPAOLO 20180307</fun:Reference>\r\n            </fun:MandatoryField>\r\n            <fun:OptionalField>\r\n                <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n                <fun:UserTagAccountMovementId/>\r\n                <fun:Uri/>\r\n                <fun:IsUrgent/>\r\n                <fun:IsInstant/>\r\n                <fun:Cro/>\r\n                <fun:OriginCro/>\r\n                <fun:Cioc></fun:Cioc>\r\n                <fun:TicketCustomerDesk/>\r\n                <fun:CausaliAbi></fun:CausaliAbi>\r\n                <fun:TaxAdvantageView>\r\n                    <fun:AdministratorCF/>\r\n                    <fun:BeneficiaryCFPIVA/>\r\n                    <fun:FirstOrderCFPIVA/>\r\n                    <fun:SecondOrderCF/>\r\n                    <fun:ThirdOrderCF/>\r\n                    <fun:FourthOrderCF/>\r\n                    <fun:FifthOrderCF/>\r\n                    <fun:SixthOrderCF/>\r\n                    <fun:SeventhOrderCF/>\r\n                    <fun:EighthOrderCF/>\r\n                    <fun:NinthOrderCF/>\r\n                    <fun:TenthOrderCF/>\r\n                    <fun:ConditionalTaxAdvantage>\r\n                        <fun:TaxAdvantageId/>\r\n                        <fun:TaxAdvantage/>\r\n                    </fun:ConditionalTaxAdvantage>\r\n                </fun:TaxAdvantageView>\r\n                <fun:DynamicField/>\r\n                <fun:DeviceId></fun:DeviceId>\r\n                <fun:AccessToken></fun:AccessToken>\r\n                <fun:AdditionalNotes> testing for additional notes service </fun:AdditionalNotes>\r\n            </fun:OptionalField>\r\n            <fun:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n            </fun:MessageContext>\r\n        </fun:FundTransferRequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BAI- Verify user able to provide additional notes in the xml and able to do payment(Execution)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman success validation\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"});\r",
									"\r",
									"\r",
									"//Convert XML response to JSON\r",
									"var jsonData = xml2Json(responseBody);\r",
									"console.log(\"JSON response\", jsonData);\r",
									"\r",
									"\r",
									"\r",
									"//Get CroID value\r",
									"var Cro = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:Cro\"];\r",
									"console.log(\"CroID is\", Cro);\r",
									"\r",
									"\r",
									"var result     =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Result'];\r",
									"\r",
									"var motivation =jsonData['soapenv:Envelope']['S:Body']['tns:FundTransferResponse']['tns:Response']['tns:Motivation'];\r",
									"\r",
									"\r",
									"// To verify the contabilie number\r",
									"var contabilenumber = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"tns:FundTransferResponse\"][\"tns:DetailPayment\"][\"tns:AccountingOperation\"][\"tns:ContabileNumber\"]\r",
									"console.log(\"contabilenumber\", contabilenumber);\r",
									"\r",
									"\r",
									"tests [\"Bonificio Fund contabilenumber     ----->  \"+contabilenumber] =contabilenumber;\r",
									"\r",
									"tests [\"Bonificio Fund CRO     ----->  \"+Cro] =Cro;\r",
									"\r",
									"tests[\"Bonificio Fund Transfer1     ----->  \"+result]     = result     === \"SUCCESS\";\r",
									"\r",
									"tests[\"Bonificio Execution Status1  ----->  \"+motivation] = motivation === \"ESAURITO\"; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:fun=\"http://www.sella.it/schema/SistemIdiPagamentoTradizionali/FundTransfer\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <fun:FundTransferRequest>\r\n            <fun:MandatoryField>\r\n                <fun:HeaderField>\r\n                    <fun:Channel>0017</fun:Channel>\r\n                    <fun:Subsystem>I_B</fun:Subsystem>\r\n                    <fun:ValidationOrExecution>E</fun:ValidationOrExecution>\r\n                </fun:HeaderField>\r\n                <fun:OrderField>\r\n                    <fun:ConditionalSubject>\r\n                        <fun:IBCode />\r\n                        <fun:SubjectId>2179639</fun:SubjectId>\r\n                        <fun:SubjectExecutorId>2179639</fun:SubjectExecutorId>\r\n                        <fun:IsCorrespondent />\r\n                    </fun:ConditionalSubject>\r\n                    <fun:ConditionalOrderAccount>\r\n                        <fun:AccountOrderId />\r\n                        <fun:AccountNumber>52149527430</fun:AccountNumber>\r\n                        <fun:Iban />\r\n                    </fun:ConditionalOrderAccount>\r\n                    <fun:ConditionalDebitAccount>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccount>\r\n                    <fun:ConditionalDebitAccountCommission>\r\n                        <fun:DebitAccountId/>\r\n                        <fun:DebitAccountNumber/>\r\n                        <fun:Iban/>\r\n                    </fun:ConditionalDebitAccountCommission>\r\n                </fun:OrderField>\r\n                <fun:BeneficiaryField>\r\n                    <fun:ConditionalBeneficiaryRules>\r\n                        <fun:BeneficiaryAccountId/>\r\n                        <fun:AccountOrIbanBeneficiary>IT59P0326822311001641490340</fun:AccountOrIbanBeneficiary>\r\n                      <fun:BicBeneficiary>SELBIT2BXXX</fun:BicBeneficiary>\r\n                        <fun:NationalBankBeneficiaryId/>\r\n                        <fun:BeneficiaryName>Azhagu</fun:BeneficiaryName>\r\n                        <fun:MandatoryForeignBeneficiaryField>\r\n                            <fun:BeneficiaryAddress/>\r\n                            <fun:BeneficiaryCity/>\r\n                        </fun:MandatoryForeignBeneficiaryField>\r\n                        <fun:IsoBeneficiaryResidence>IT</fun:IsoBeneficiaryResidence>\r\n                    </fun:ConditionalBeneficiaryRules>\r\n                </fun:BeneficiaryField>\r\n                <fun:AmountDetails>\r\n                    <fun:Amount>1.01</fun:Amount>\r\n                    <fun:Currency>EUR</fun:Currency>\r\n                </fun:AmountDetails>\r\n                <fun:KindOfCommission>SHA</fun:KindOfCommission>\r\n                <fun:Reference>TEST INVIO INTESA SANPAOLO 20180307</fun:Reference>\r\n            </fun:MandatoryField>\r\n            <fun:OptionalField>\r\n                <fun:ExecutionDatePayment>{{today}}</fun:ExecutionDatePayment>\r\n                <fun:UserTagAccountMovementId/>\r\n                <fun:Uri/>\r\n                <fun:IsUrgent/>\r\n                <fun:IsInstant/>\r\n                <fun:Cro/>\r\n                <fun:OriginCro/>\r\n                <fun:Cioc></fun:Cioc>\r\n                <fun:TicketCustomerDesk/>\r\n                <fun:CausaliAbi></fun:CausaliAbi>\r\n                <fun:TaxAdvantageView>\r\n                    <fun:AdministratorCF/>\r\n                    <fun:BeneficiaryCFPIVA/>\r\n                    <fun:FirstOrderCFPIVA/>\r\n                    <fun:SecondOrderCF/>\r\n                    <fun:ThirdOrderCF/>\r\n                    <fun:FourthOrderCF/>\r\n                    <fun:FifthOrderCF/>\r\n                    <fun:SixthOrderCF/>\r\n                    <fun:SeventhOrderCF/>\r\n                    <fun:EighthOrderCF/>\r\n                    <fun:NinthOrderCF/>\r\n                    <fun:TenthOrderCF/>\r\n                    <fun:ConditionalTaxAdvantage>\r\n                        <fun:TaxAdvantageId/>\r\n                        <fun:TaxAdvantage/>\r\n                    </fun:ConditionalTaxAdvantage>\r\n                </fun:TaxAdvantageView>\r\n                <fun:DynamicField/>\r\n                <fun:DeviceId></fun:DeviceId>\r\n                <fun:AccessToken></fun:AccessToken>\r\n                <fun:AdditionalNotes> testing for additional notes service </fun:AdditionalNotes>\r\n            </fun:OptionalField>\r\n            <fun:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n            </fun:MessageContext>\r\n        </fun:FundTransferRequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{webservice}}/FundTransfer/FundTransfer?WSDL",
							"host": [
								"{{webservice}}"
							],
							"path": [
								"FundTransfer",
								"FundTransfer"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//current date",
					"var moment= require('moment');",
					"postman.setEnvironmentVariable(\"today\",moment().format(\"DD/MM/YYYY\"));",
					"",
					"//futuredate",
					"var next_sevendays=moment().add(7,'days')",
					"postman.setEnvironmentVariable(\"BookingPayment\",moment(next_sevendays).format(\"DD/MM/YYYY\"));"
				]
			}
		}
	]
}